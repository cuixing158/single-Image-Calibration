function [altitude,verticeP,orthocenter] = calTritetrahedron(pointA,pointB,pointC)
% Brief: 根据已知直角四面体的底面的三个三维角点坐标计算顶点高度，顶点坐标，底面垂心坐标
% Details:
%    数学分析结果过程见：https://www.mathworks.com/matlabcentral/answers/1779430-how-do-i-solve-for-the-coordinates-of-the-vertices-of-a-trirectangular-tetrahedron-using-the-symboli?s_tid=srchtitle
% 
% Syntax:  
%     [altitude,verticeP,orthocenter] = calTritetrahedron(pointA,pointB,pointC)
% 
% Inputs:
%    pointA - [1,3] size,[double] type,Description
%    pointB - [1,3] size,[double] type,Description
%    pointC - [1,3] size,[double] type,Description
% 
% Outputs:
%    altitude - [1,1] size,[double] type,Description
%    verticeP - [1,3] size,[double] type,Description
%    orthocenter - [1,3] size,[double] type,Description
% 
% Example: 
%    None
% 
% See also: None

% Author:                          cuixingxing
% Email:                           cuixingxing150@gmail.com
% Created:                         16-Aug-2022 15:21:02
% Version history revision notes:
%                                  None
% Implementation In Matlab R2022a
%
arguments
    pointA (1,3) double
    pointB (1,3) double
    pointC (1,3) double
end

x1 = pointA(1,1);y1 = pointA(1,2);z1 = pointA(1,3);
x2 = pointB(1,1);y2 = pointB(1,2);z2 = pointB(1,3);
x3 = pointC(1,1);y3 = pointC(1,2);z3 = pointC(1,3);

altitude = (sqrt(x1*x2 - x1*x3 - x2*x3 + y1*y2 - y1*y3 - y2*y3 + z1*z2 - z1*z3 -...
    z2*z3 + x3^2 + y3^2 + z3^2)*sqrt(x2*x3 - x1*x3 - x1*x2 - y1*y2 - ...
    y1*y3 + y2*y3 - z1*z2 - z1*z3 + z2*z3 + x1^2 + y1^2 + z1^2)*sqrt(...
    x1*x3 - x1*x2 - x2*x3 - y1*y2 + y1*y3 - y2*y3 - z1*z2 + z1*z3 - ...
    z2*z3 + x2^2 + y2^2 + z2^2))/sqrt(abs(((x1 - x2)*(y1 - y3) - (x1 -...
    x3)*(y1 - y2)))^2 + abs(((x1 - x2)*(z1 - z3) - (x1 - x3)*(z1 - z2)))^2 +...
    abs(((y1 - y2)*(z1 - z3) - (y1 - y3)*(z1 - z2)))^2);

xo_ = -(x1^2*x2*y1*y2 - x1^2*x2*y1*y3 - x1^2*x2*y2^2 + x1^2*x2*y2*y3 + x1^2*x2*z1*z2 - x1^2*x2*z1*z3 - x1^2*x2*z2^2 + x1^2*x2*z2*z3 - x1^2*x3*y1*y2 + x1^2*x3*y1*y3 + x1^2*x3*y2*y3 - x1^2*x3*y3^2 - x1^2*x3*z1*z2 + x1^2*x3*z1*z3 + x1^2*x3*z2*z3 - x1^2*x3*z3^2 - x1*x2^2*y1^2 + x1*x2^2*y1*y2 + x1*x2^2*y1*y3 - x1*x2^2*y2*y3 - x1*x2^2*z1^2 + x1*x2^2*z1*z2 + x1*x2^2*z1*z3 - x1*x2^2*z2*z3 + 2*x1*x2*x3*y1^2 - 2*x1*x2*x3*y1*y2 - 2*x1*x2*x3*y1*y3 + 2*x1*x2*x3*y2^2 - 2*x1*x2*x3*y2*y3 + 2*x1*x2*x3*y3^2 + 2*x1*x2*x3*z1^2 - 2*x1*x2*x3*z1*z2 - 2*x1*x2*x3*z1*z3 + 2*x1*x2*x3*z2^2 - 2*x1*x2*x3*z2*z3 + 2*x1*x2*x3*z3^2 - x1*x3^2*y1^2 + x1*x3^2*y1*y2 + x1*x3^2*y1*y3 - x1*x3^2*y2*y3 - x1*x3^2*z1^2 + x1*x3^2*z1*z2 + x1*x3^2*z1*z3 - x1*x3^2*z2*z3 + x1*y1^2*y2^2 - 2*x1*y1^2*y2*y3 + x1*y1^2*y3^2 - x1*y1*y2^3 + x1*y1*y2^2*y3 + x1*y1*y2*y3^2 + 2*x1*y1*y2*z1*z2 - 2*x1*y1*y2*z1*z3 - x1*y1*y2*z2^2 + x1*y1*y2*z3^2 - x1*y1*y3^3 - 2*x1*y1*y3*z1*z2 + 2*x1*y1*y3*z1*z3 + x1*y1*y3*z2^2 - x1*y1*y3*z3^2 + x1*y2^3*y3 - 2*x1*y2^2*y3^2 - x1*y2^2*z1*z2 + x1*y2^2*z1*z3 + x1*y2^2*z2*z3 - x1*y2^2*z3^2 + x1*y2*y3^3 + x1*y2*y3*z2^2 - 2*x1*y2*y3*z2*z3 + x1*y2*y3*z3^2 + x1*y3^2*z1*z2 - x1*y3^2*z1*z3 - x1*y3^2*z2^2 + x1*y3^2*z2*z3 + x1*z1^2*z2^2 - 2*x1*z1^2*z2*z3 + x1*z1^2*z3^2 - x1*z1*z2^3 + x1*z1*z2^2*z3 + x1*z1*z2*z3^2 - x1*z1*z3^3 + x1*z2^3*z3 - 2*x1*z2^2*z3^2 + x1*z2*z3^3 - x2^2*x3*y1*y2 + x2^2*x3*y1*y3 + x2^2*x3*y2*y3 - x2^2*x3*y3^2 - x2^2*x3*z1*z2 + x2^2*x3*z1*z3 + x2^2*x3*z2*z3 - x2^2*x3*z3^2 + x2*x3^2*y1*y2 - x2*x3^2*y1*y3 - x2*x3^2*y2^2 + x2*x3^2*y2*y3 + x2*x3^2*z1*z2 - x2*x3^2*z1*z3 - x2*x3^2*z2^2 + x2*x3^2*z2*z3 - x2*y1^3*y2 + x2*y1^3*y3 + x2*y1^2*y2^2 + x2*y1^2*y2*y3 - 2*x2*y1^2*y3^2 - x2*y1^2*z1*z2 + x2*y1^2*z1*z3 + x2*y1^2*z2*z3 - x2*y1^2*z3^2 - 2*x2*y1*y2^2*y3 + x2*y1*y2*y3^2 - x2*y1*y2*z1^2 + 2*x2*y1*y2*z1*z2 - 2*x2*y1*y2*z2*z3 + x2*y1*y2*z3^2 + x2*y1*y3^3 + x2*y1*y3*z1^2 - 2*x2*y1*y3*z1*z3 + x2*y1*y3*z3^2 + x2*y2^2*y3^2 - x2*y2*y3^3 + x2*y2*y3*z1^2 - 2*x2*y2*y3*z1*z2 + 2*x2*y2*y3*z2*z3 - x2*y2*y3*z3^2 - x2*y3^2*z1^2 + x2*y3^2*z1*z2 + x2*y3^2*z1*z3 - x2*y3^2*z2*z3 - x2*z1^3*z2 + x2*z1^3*z3 + x2*z1^2*z2^2 + x2*z1^2*z2*z3 - 2*x2*z1^2*z3^2 - 2*x2*z1*z2^2*z3 + x2*z1*z2*z3^2 + x2*z1*z3^3 + x2*z2^2*z3^2 - x2*z2*z3^3 + x3*y1^3*y2 - x3*y1^3*y3 - 2*x3*y1^2*y2^2 + x3*y1^2*y2*y3 + x3*y1^2*y3^2 + x3*y1^2*z1*z2 - x3*y1^2*z1*z3 - x3*y1^2*z2^2 + x3*y1^2*z2*z3 + x3*y1*y2^3 + x3*y1*y2^2*y3 - 2*x3*y1*y2*y3^2 + x3*y1*y2*z1^2 - 2*x3*y1*y2*z1*z2 + x3*y1*y2*z2^2 - x3*y1*y3*z1^2 + 2*x3*y1*y3*z1*z3 + x3*y1*y3*z2^2 - 2*x3*y1*y3*z2*z3 - x3*y2^3*y3 + x3*y2^2*y3^2 - x3*y2^2*z1^2 + x3*y2^2*z1*z2 + x3*y2^2*z1*z3 - x3*y2^2*z2*z3 + x3*y2*y3*z1^2 - 2*x3*y2*y3*z1*z3 - x3*y2*y3*z2^2 + 2*x3*y2*y3*z2*z3 + x3*z1^3*z2 - x3*z1^3*z3 - 2*x3*z1^2*z2^2 + x3*z1^2*z2*z3 + x3*z1^2*z3^2 + x3*z1*z2^3 + x3*z1*z2^2*z3 - 2*x3*z1*z2*z3^2 - x3*z2^3*z3 + x3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2);
yo_ = -(- x1^3*x2*y2 + x1^3*x2*y3 + x1^3*x3*y2 - x1^3*x3*y3 + x1^2*x2^2*y1 + x1^2*x2^2*y2 - 2*x1^2*x2^2*y3 - 2*x1^2*x2*x3*y1 + x1^2*x2*x3*y2 + x1^2*x2*x3*y3 + x1^2*x3^2*y1 - 2*x1^2*x3^2*y2 + x1^2*x3^2*y3 - x1^2*y1*y2^2 + 2*x1^2*y1*y2*y3 - x1^2*y1*y3^2 - x1^2*y2*z1*z2 + x1^2*y2*z1*z3 + x1^2*y2*z2*z3 - x1^2*y2*z3^2 + x1^2*y3*z1*z2 - x1^2*y3*z1*z3 - x1^2*y3*z2^2 + x1^2*y3*z2*z3 - x1*x2^3*y1 + x1*x2^3*y3 + x1*x2^2*x3*y1 - 2*x1*x2^2*x3*y2 + x1*x2^2*x3*y3 + x1*x2*x3^2*y1 + x1*x2*x3^2*y2 - 2*x1*x2*x3^2*y3 + x1*x2*y1^2*y2 - x1*x2*y1^2*y3 + x1*x2*y1*y2^2 - 2*x1*x2*y1*y2*y3 + x1*x2*y1*y3^2 + 2*x1*x2*y1*z1*z2 - 2*x1*x2*y1*z1*z3 - x1*x2*y1*z2^2 + x1*x2*y1*z3^2 - x1*x2*y2^2*y3 + x1*x2*y2*y3^2 - x1*x2*y2*z1^2 + 2*x1*x2*y2*z1*z2 - 2*x1*x2*y2*z2*z3 + x1*x2*y2*z3^2 + x1*x2*y3*z1^2 - 2*x1*x2*y3*z1*z2 + x1*x2*y3*z2^2 - x1*x3^3*y1 + x1*x3^3*y2 - x1*x3*y1^2*y2 + x1*x3*y1^2*y3 + x1*x3*y1*y2^2 - 2*x1*x3*y1*y2*y3 + x1*x3*y1*y3^2 - 2*x1*x3*y1*z1*z2 + 2*x1*x3*y1*z1*z3 + x1*x3*y1*z2^2 - x1*x3*y1*z3^2 + x1*x3*y2^2*y3 - x1*x3*y2*y3^2 + x1*x3*y2*z1^2 - 2*x1*x3*y2*z1*z3 + x1*x3*y2*z3^2 - x1*x3*y3*z1^2 + 2*x1*x3*y3*z1*z3 + x1*x3*y3*z2^2 - 2*x1*x3*y3*z2*z3 + x2^3*x3*y1 - x2^3*x3*y3 - 2*x2^2*x3^2*y1 + x2^2*x3^2*y2 + x2^2*x3^2*y3 - x2^2*y1^2*y2 + 2*x2^2*y1*y2*y3 - x2^2*y1*z1*z2 + x2^2*y1*z1*z3 + x2^2*y1*z2*z3 - x2^2*y1*z3^2 - x2^2*y2*y3^2 - x2^2*y3*z1^2 + x2^2*y3*z1*z2 + x2^2*y3*z1*z3 - x2^2*y3*z2*z3 + x2*x3^3*y1 - x2*x3^3*y2 + x2*x3*y1^2*y2 + x2*x3*y1^2*y3 - x2*x3*y1*y2^2 - 2*x2*x3*y1*y2*y3 - x2*x3*y1*y3^2 + x2*x3*y1*z2^2 - 2*x2*x3*y1*z2*z3 + x2*x3*y1*z3^2 + x2*x3*y2^2*y3 + x2*x3*y2*y3^2 + x2*x3*y2*z1^2 - 2*x2*x3*y2*z1*z2 + 2*x2*x3*y2*z2*z3 - x2*x3*y2*z3^2 + x2*x3*y3*z1^2 - 2*x2*x3*y3*z1*z3 - x2*x3*y3*z2^2 + 2*x2*x3*y3*z2*z3 - x3^2*y1^2*y3 + 2*x3^2*y1*y2*y3 + x3^2*y1*z1*z2 - x3^2*y1*z1*z3 - x3^2*y1*z2^2 + x3^2*y1*z2*z3 - x3^2*y2^2*y3 - x3^2*y2*z1^2 + x3^2*y2*z1*z2 + x3^2*y2*z1*z3 - x3^2*y2*z2*z3 + y1^2*y2*z1*z2 - y1^2*y2*z1*z3 - y1^2*y2*z2^2 + y1^2*y2*z2*z3 - y1^2*y3*z1*z2 + y1^2*y3*z1*z3 + y1^2*y3*z2*z3 - y1^2*y3*z3^2 - y1*y2^2*z1^2 + y1*y2^2*z1*z2 + y1*y2^2*z1*z3 - y1*y2^2*z2*z3 + 2*y1*y2*y3*z1^2 - 2*y1*y2*y3*z1*z2 - 2*y1*y2*y3*z1*z3 + 2*y1*y2*y3*z2^2 - 2*y1*y2*y3*z2*z3 + 2*y1*y2*y3*z3^2 - y1*y3^2*z1^2 + y1*y3^2*z1*z2 + y1*y3^2*z1*z3 - y1*y3^2*z2*z3 + y1*z1^2*z2^2 - 2*y1*z1^2*z2*z3 + y1*z1^2*z3^2 - y1*z1*z2^3 + y1*z1*z2^2*z3 + y1*z1*z2*z3^2 - y1*z1*z3^3 + y1*z2^3*z3 - 2*y1*z2^2*z3^2 + y1*z2*z3^3 - y2^2*y3*z1*z2 + y2^2*y3*z1*z3 + y2^2*y3*z2*z3 - y2^2*y3*z3^2 + y2*y3^2*z1*z2 - y2*y3^2*z1*z3 - y2*y3^2*z2^2 + y2*y3^2*z2*z3 - y2*z1^3*z2 + y2*z1^3*z3 + y2*z1^2*z2^2 + y2*z1^2*z2*z3 - 2*y2*z1^2*z3^2 - 2*y2*z1*z2^2*z3 + y2*z1*z2*z3^2 + y2*z1*z3^3 + y2*z2^2*z3^2 - y2*z2*z3^3 + y3*z1^3*z2 - y3*z1^3*z3 - 2*y3*z1^2*z2^2 + y3*z1^2*z2*z3 + y3*z1^2*z3^2 + y3*z1*z2^3 + y3*z1*z2^2*z3 - 2*y3*z1*z2*z3^2 - y3*z2^3*z3 + y3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2);
zo_ = -(- x1^3*x2*z2 + x1^3*x2*z3 + x1^3*x3*z2 - x1^3*x3*z3 + x1^2*x2^2*z1 + x1^2*x2^2*z2 - 2*x1^2*x2^2*z3 - 2*x1^2*x2*x3*z1 + x1^2*x2*x3*z2 + x1^2*x2*x3*z3 + x1^2*x3^2*z1 - 2*x1^2*x3^2*z2 + x1^2*x3^2*z3 - x1^2*y1*y2*z2 + x1^2*y1*y2*z3 + x1^2*y1*y3*z2 - x1^2*y1*y3*z3 - x1^2*y2^2*z3 + x1^2*y2*y3*z2 + x1^2*y2*y3*z3 - x1^2*y3^2*z2 - x1^2*z1*z2^2 + 2*x1^2*z1*z2*z3 - x1^2*z1*z3^2 - x1*x2^3*z1 + x1*x2^3*z3 + x1*x2^2*x3*z1 - 2*x1*x2^2*x3*z2 + x1*x2^2*x3*z3 + x1*x2*x3^2*z1 + x1*x2*x3^2*z2 - 2*x1*x2*x3^2*z3 - x1*x2*y1^2*z2 + x1*x2*y1^2*z3 + 2*x1*x2*y1*y2*z1 + 2*x1*x2*y1*y2*z2 - 2*x1*x2*y1*y2*z3 - 2*x1*x2*y1*y3*z1 - x1*x2*y2^2*z1 + x1*x2*y2^2*z3 - 2*x1*x2*y2*y3*z2 + x1*x2*y3^2*z1 + x1*x2*y3^2*z2 + x1*x2*z1^2*z2 - x1*x2*z1^2*z3 + x1*x2*z1*z2^2 - 2*x1*x2*z1*z2*z3 + x1*x2*z1*z3^2 - x1*x2*z2^2*z3 + x1*x2*z2*z3^2 - x1*x3^3*z1 + x1*x3^3*z2 + x1*x3*y1^2*z2 - x1*x3*y1^2*z3 - 2*x1*x3*y1*y2*z1 + 2*x1*x3*y1*y3*z1 - 2*x1*x3*y1*y3*z2 + 2*x1*x3*y1*y3*z3 + x1*x3*y2^2*z1 + x1*x3*y2^2*z3 - 2*x1*x3*y2*y3*z3 - x1*x3*y3^2*z1 + x1*x3*y3^2*z2 - x1*x3*z1^2*z2 + x1*x3*z1^2*z3 + x1*x3*z1*z2^2 - 2*x1*x3*z1*z2*z3 + x1*x3*z1*z3^2 + x1*x3*z2^2*z3 - x1*x3*z2*z3^2 + x2^3*x3*z1 - x2^3*x3*z3 - 2*x2^2*x3^2*z1 + x2^2*x3^2*z2 + x2^2*x3^2*z3 - x2^2*y1^2*z3 - x2^2*y1*y2*z1 + x2^2*y1*y2*z3 + x2^2*y1*y3*z1 + x2^2*y1*y3*z3 + x2^2*y2*y3*z1 - x2^2*y2*y3*z3 - x2^2*y3^2*z1 - x2^2*z1^2*z2 + 2*x2^2*z1*z2*z3 - x2^2*z2*z3^2 + x2*x3^3*z1 - x2*x3^3*z2 + x2*x3*y1^2*z2 + x2*x3*y1^2*z3 - 2*x2*x3*y1*y2*z2 - 2*x2*x3*y1*y3*z3 + x2*x3*y2^2*z1 - x2*x3*y2^2*z3 - 2*x2*x3*y2*y3*z1 + 2*x2*x3*y2*y3*z2 + 2*x2*x3*y2*y3*z3 + x2*x3*y3^2*z1 - x2*x3*y3^2*z2 + x2*x3*z1^2*z2 + x2*x3*z1^2*z3 - x2*x3*z1*z2^2 - 2*x2*x3*z1*z2*z3 - x2*x3*z1*z3^2 + x2*x3*z2^2*z3 + x2*x3*z2*z3^2 - x3^2*y1^2*z2 + x3^2*y1*y2*z1 + x3^2*y1*y2*z2 - x3^2*y1*y3*z1 + x3^2*y1*y3*z2 - x3^2*y2^2*z1 + x3^2*y2*y3*z1 - x3^2*y2*y3*z2 - x3^2*z1^2*z3 + 2*x3^2*z1*z2*z3 - x3^2*z2^2*z3 - y1^3*y2*z2 + y1^3*y2*z3 + y1^3*y3*z2 - y1^3*y3*z3 + y1^2*y2^2*z1 + y1^2*y2^2*z2 - 2*y1^2*y2^2*z3 - 2*y1^2*y2*y3*z1 + y1^2*y2*y3*z2 + y1^2*y2*y3*z3 + y1^2*y3^2*z1 - 2*y1^2*y3^2*z2 + y1^2*y3^2*z3 - y1^2*z1*z2^2 + 2*y1^2*z1*z2*z3 - y1^2*z1*z3^2 - y1*y2^3*z1 + y1*y2^3*z3 + y1*y2^2*y3*z1 - 2*y1*y2^2*y3*z2 + y1*y2^2*y3*z3 + y1*y2*y3^2*z1 + y1*y2*y3^2*z2 - 2*y1*y2*y3^2*z3 + y1*y2*z1^2*z2 - y1*y2*z1^2*z3 + y1*y2*z1*z2^2 - 2*y1*y2*z1*z2*z3 + y1*y2*z1*z3^2 - y1*y2*z2^2*z3 + y1*y2*z2*z3^2 - y1*y3^3*z1 + y1*y3^3*z2 - y1*y3*z1^2*z2 + y1*y3*z1^2*z3 + y1*y3*z1*z2^2 - 2*y1*y3*z1*z2*z3 + y1*y3*z1*z3^2 + y1*y3*z2^2*z3 - y1*y3*z2*z3^2 + y2^3*y3*z1 - y2^3*y3*z3 - 2*y2^2*y3^2*z1 + y2^2*y3^2*z2 + y2^2*y3^2*z3 - y2^2*z1^2*z2 + 2*y2^2*z1*z2*z3 - y2^2*z2*z3^2 + y2*y3^3*z1 - y2*y3^3*z2 + y2*y3*z1^2*z2 + y2*y3*z1^2*z3 - y2*y3*z1*z2^2 - 2*y2*y3*z1*z2*z3 - y2*y3*z1*z3^2 + y2*y3*z2^2*z3 + y2*y3*z2*z3^2 - y3^2*z1^2*z3 + 2*y3^2*z1*z2*z3 - y3^2*z2^2*z3)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2);
orthocenter = [xo_,yo_,zo_];

verticeP = [(conj(sqrt(x2*x3 - x1*x3 - x1*x2 - y1*y2 - y1*y3 + y2*y3 - z1*z2 - z1*z3 + z2*z3 - (x1 + (x1^2*x2*y1*y2 - x1^2*x2*y1*y3 - x1^2*x2*y2^2 + x1^2*x2*y2*y3 + x1^2*x2*z1*z2 - x1^2*x2*z1*z3 - x1^2*x2*z2^2 + x1^2*x2*z2*z3 - x1^2*x3*y1*y2 + x1^2*x3*y1*y3 + x1^2*x3*y2*y3 - x1^2*x3*y3^2 - x1^2*x3*z1*z2 + x1^2*x3*z1*z3 + x1^2*x3*z2*z3 - x1^2*x3*z3^2 - x1*x2^2*y1^2 + x1*x2^2*y1*y2 + x1*x2^2*y1*y3 - x1*x2^2*y2*y3 - x1*x2^2*z1^2 + x1*x2^2*z1*z2 + x1*x2^2*z1*z3 - x1*x2^2*z2*z3 + 2*x1*x2*x3*y1^2 - 2*x1*x2*x3*y1*y2 - 2*x1*x2*x3*y1*y3 + 2*x1*x2*x3*y2^2 - 2*x1*x2*x3*y2*y3 + 2*x1*x2*x3*y3^2 + 2*x1*x2*x3*z1^2 - 2*x1*x2*x3*z1*z2 - 2*x1*x2*x3*z1*z3 + 2*x1*x2*x3*z2^2 - 2*x1*x2*x3*z2*z3 + 2*x1*x2*x3*z3^2 - x1*x3^2*y1^2 + x1*x3^2*y1*y2 + x1*x3^2*y1*y3 - x1*x3^2*y2*y3 - x1*x3^2*z1^2 + x1*x3^2*z1*z2 + x1*x3^2*z1*z3 - x1*x3^2*z2*z3 + x1*y1^2*y2^2 - 2*x1*y1^2*y2*y3 + x1*y1^2*y3^2 - x1*y1*y2^3 + x1*y1*y2^2*y3 + x1*y1*y2*y3^2 + 2*x1*y1*y2*z1*z2 - 2*x1*y1*y2*z1*z3 - x1*y1*y2*z2^2 + x1*y1*y2*z3^2 - x1*y1*y3^3 - 2*x1*y1*y3*z1*z2 + 2*x1*y1*y3*z1*z3 + x1*y1*y3*z2^2 - x1*y1*y3*z3^2 + x1*y2^3*y3 - 2*x1*y2^2*y3^2 - x1*y2^2*z1*z2 + x1*y2^2*z1*z3 + x1*y2^2*z2*z3 - x1*y2^2*z3^2 + x1*y2*y3^3 + x1*y2*y3*z2^2 - 2*x1*y2*y3*z2*z3 + x1*y2*y3*z3^2 + x1*y3^2*z1*z2 - x1*y3^2*z1*z3 - x1*y3^2*z2^2 + x1*y3^2*z2*z3 + x1*z1^2*z2^2 - 2*x1*z1^2*z2*z3 + x1*z1^2*z3^2 - x1*z1*z2^3 + x1*z1*z2^2*z3 + x1*z1*z2*z3^2 - x1*z1*z3^3 + x1*z2^3*z3 - 2*x1*z2^2*z3^2 + x1*z2*z3^3 - x2^2*x3*y1*y2 + x2^2*x3*y1*y3 + x2^2*x3*y2*y3 - x2^2*x3*y3^2 - x2^2*x3*z1*z2 + x2^2*x3*z1*z3 + x2^2*x3*z2*z3 - x2^2*x3*z3^2 + x2*x3^2*y1*y2 - x2*x3^2*y1*y3 - x2*x3^2*y2^2 + x2*x3^2*y2*y3 + x2*x3^2*z1*z2 - x2*x3^2*z1*z3 - x2*x3^2*z2^2 + x2*x3^2*z2*z3 - x2*y1^3*y2 + x2*y1^3*y3 + x2*y1^2*y2^2 + x2*y1^2*y2*y3 - 2*x2*y1^2*y3^2 - x2*y1^2*z1*z2 + x2*y1^2*z1*z3 + x2*y1^2*z2*z3 - x2*y1^2*z3^2 - 2*x2*y1*y2^2*y3 + x2*y1*y2*y3^2 - x2*y1*y2*z1^2 + 2*x2*y1*y2*z1*z2 - 2*x2*y1*y2*z2*z3 + x2*y1*y2*z3^2 + x2*y1*y3^3 + x2*y1*y3*z1^2 - 2*x2*y1*y3*z1*z3 + x2*y1*y3*z3^2 + x2*y2^2*y3^2 - x2*y2*y3^3 + x2*y2*y3*z1^2 - 2*x2*y2*y3*z1*z2 + 2*x2*y2*y3*z2*z3 - x2*y2*y3*z3^2 - x2*y3^2*z1^2 + x2*y3^2*z1*z2 + x2*y3^2*z1*z3 - x2*y3^2*z2*z3 - x2*z1^3*z2 + x2*z1^3*z3 + x2*z1^2*z2^2 + x2*z1^2*z2*z3 - 2*x2*z1^2*z3^2 - 2*x2*z1*z2^2*z3 + x2*z1*z2*z3^2 + x2*z1*z3^3 + x2*z2^2*z3^2 - x2*z2*z3^3 + x3*y1^3*y2 - x3*y1^3*y3 - 2*x3*y1^2*y2^2 + x3*y1^2*y2*y3 + x3*y1^2*y3^2 + x3*y1^2*z1*z2 - x3*y1^2*z1*z3 - x3*y1^2*z2^2 + x3*y1^2*z2*z3 + x3*y1*y2^3 + x3*y1*y2^2*y3 - 2*x3*y1*y2*y3^2 + x3*y1*y2*z1^2 - 2*x3*y1*y2*z1*z2 + x3*y1*y2*z2^2 - x3*y1*y3*z1^2 + 2*x3*y1*y3*z1*z3 + x3*y1*y3*z2^2 - 2*x3*y1*y3*z2*z3 - x3*y2^3*y3 + x3*y2^2*y3^2 - x3*y2^2*z1^2 + x3*y2^2*z1*z2 + x3*y2^2*z1*z3 - x3*y2^2*z2*z3 + x3*y2*y3*z1^2 - 2*x3*y2*y3*z1*z3 - x3*y2*y3*z2^2 + 2*x3*y2*y3*z2*z3 + x3*z1^3*z2 - x3*z1^3*z3 - 2*x3*z1^2*z2^2 + x3*z1^2*z2*z3 + x3*z1^2*z3^2 + x3*z1*z2^3 + x3*z1*z2^2*z3 - 2*x3*z1*z2*z3^2 - x3*z2^3*z3 + x3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 - (y1 + (- x1^3*x2*y2 + x1^3*x2*y3 + x1^3*x3*y2 - x1^3*x3*y3 + x1^2*x2^2*y1 + x1^2*x2^2*y2 - 2*x1^2*x2^2*y3 - 2*x1^2*x2*x3*y1 + x1^2*x2*x3*y2 + x1^2*x2*x3*y3 + x1^2*x3^2*y1 - 2*x1^2*x3^2*y2 + x1^2*x3^2*y3 - x1^2*y1*y2^2 + 2*x1^2*y1*y2*y3 - x1^2*y1*y3^2 - x1^2*y2*z1*z2 + x1^2*y2*z1*z3 + x1^2*y2*z2*z3 - x1^2*y2*z3^2 + x1^2*y3*z1*z2 - x1^2*y3*z1*z3 - x1^2*y3*z2^2 + x1^2*y3*z2*z3 - x1*x2^3*y1 + x1*x2^3*y3 + x1*x2^2*x3*y1 - 2*x1*x2^2*x3*y2 + x1*x2^2*x3*y3 + x1*x2*x3^2*y1 + x1*x2*x3^2*y2 - 2*x1*x2*x3^2*y3 + x1*x2*y1^2*y2 - x1*x2*y1^2*y3 + x1*x2*y1*y2^2 - 2*x1*x2*y1*y2*y3 + x1*x2*y1*y3^2 + 2*x1*x2*y1*z1*z2 - 2*x1*x2*y1*z1*z3 - x1*x2*y1*z2^2 + x1*x2*y1*z3^2 - x1*x2*y2^2*y3 + x1*x2*y2*y3^2 - x1*x2*y2*z1^2 + 2*x1*x2*y2*z1*z2 - 2*x1*x2*y2*z2*z3 + x1*x2*y2*z3^2 + x1*x2*y3*z1^2 - 2*x1*x2*y3*z1*z2 + x1*x2*y3*z2^2 - x1*x3^3*y1 + x1*x3^3*y2 - x1*x3*y1^2*y2 + x1*x3*y1^2*y3 + x1*x3*y1*y2^2 - 2*x1*x3*y1*y2*y3 + x1*x3*y1*y3^2 - 2*x1*x3*y1*z1*z2 + 2*x1*x3*y1*z1*z3 + x1*x3*y1*z2^2 - x1*x3*y1*z3^2 + x1*x3*y2^2*y3 - x1*x3*y2*y3^2 + x1*x3*y2*z1^2 - 2*x1*x3*y2*z1*z3 + x1*x3*y2*z3^2 - x1*x3*y3*z1^2 + 2*x1*x3*y3*z1*z3 + x1*x3*y3*z2^2 - 2*x1*x3*y3*z2*z3 + x2^3*x3*y1 - x2^3*x3*y3 - 2*x2^2*x3^2*y1 + x2^2*x3^2*y2 + x2^2*x3^2*y3 - x2^2*y1^2*y2 + 2*x2^2*y1*y2*y3 - x2^2*y1*z1*z2 + x2^2*y1*z1*z3 + x2^2*y1*z2*z3 - x2^2*y1*z3^2 - x2^2*y2*y3^2 - x2^2*y3*z1^2 + x2^2*y3*z1*z2 + x2^2*y3*z1*z3 - x2^2*y3*z2*z3 + x2*x3^3*y1 - x2*x3^3*y2 + x2*x3*y1^2*y2 + x2*x3*y1^2*y3 - x2*x3*y1*y2^2 - 2*x2*x3*y1*y2*y3 - x2*x3*y1*y3^2 + x2*x3*y1*z2^2 - 2*x2*x3*y1*z2*z3 + x2*x3*y1*z3^2 + x2*x3*y2^2*y3 + x2*x3*y2*y3^2 + x2*x3*y2*z1^2 - 2*x2*x3*y2*z1*z2 + 2*x2*x3*y2*z2*z3 - x2*x3*y2*z3^2 + x2*x3*y3*z1^2 - 2*x2*x3*y3*z1*z3 - x2*x3*y3*z2^2 + 2*x2*x3*y3*z2*z3 - x3^2*y1^2*y3 + 2*x3^2*y1*y2*y3 + x3^2*y1*z1*z2 - x3^2*y1*z1*z3 - x3^2*y1*z2^2 + x3^2*y1*z2*z3 - x3^2*y2^2*y3 - x3^2*y2*z1^2 + x3^2*y2*z1*z2 + x3^2*y2*z1*z3 - x3^2*y2*z2*z3 + y1^2*y2*z1*z2 - y1^2*y2*z1*z3 - y1^2*y2*z2^2 + y1^2*y2*z2*z3 - y1^2*y3*z1*z2 + y1^2*y3*z1*z3 + y1^2*y3*z2*z3 - y1^2*y3*z3^2 - y1*y2^2*z1^2 + y1*y2^2*z1*z2 + y1*y2^2*z1*z3 - y1*y2^2*z2*z3 + 2*y1*y2*y3*z1^2 - 2*y1*y2*y3*z1*z2 - 2*y1*y2*y3*z1*z3 + 2*y1*y2*y3*z2^2 - 2*y1*y2*y3*z2*z3 + 2*y1*y2*y3*z3^2 - y1*y3^2*z1^2 + y1*y3^2*z1*z2 + y1*y3^2*z1*z3 - y1*y3^2*z2*z3 + y1*z1^2*z2^2 - 2*y1*z1^2*z2*z3 + y1*z1^2*z3^2 - y1*z1*z2^3 + y1*z1*z2^2*z3 + y1*z1*z2*z3^2 - y1*z1*z3^3 + y1*z2^3*z3 - 2*y1*z2^2*z3^2 + y1*z2*z3^3 - y2^2*y3*z1*z2 + y2^2*y3*z1*z3 + y2^2*y3*z2*z3 - y2^2*y3*z3^2 + y2*y3^2*z1*z2 - y2*y3^2*z1*z3 - y2*y3^2*z2^2 + y2*y3^2*z2*z3 - y2*z1^3*z2 + y2*z1^3*z3 + y2*z1^2*z2^2 + y2*z1^2*z2*z3 - 2*y2*z1^2*z3^2 - 2*y2*z1*z2^2*z3 + y2*z1*z2*z3^2 + y2*z1*z3^3 + y2*z2^2*z3^2 - y2*z2*z3^3 + y3*z1^3*z2 - y3*z1^3*z3 - 2*y3*z1^2*z2^2 + y3*z1^2*z2*z3 + y3*z1^2*z3^2 + y3*z1*z2^3 + y3*z1*z2^2*z3 - 2*y3*z1*z2*z3^2 - y3*z2^3*z3 + y3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 - (z1 + (- x1^3*x2*z2 + x1^3*x2*z3 + x1^3*x3*z2 - x1^3*x3*z3 + x1^2*x2^2*z1 + x1^2*x2^2*z2 - 2*x1^2*x2^2*z3 - 2*x1^2*x2*x3*z1 + x1^2*x2*x3*z2 + x1^2*x2*x3*z3 + x1^2*x3^2*z1 - 2*x1^2*x3^2*z2 + x1^2*x3^2*z3 - x1^2*y1*y2*z2 + x1^2*y1*y2*z3 + x1^2*y1*y3*z2 - x1^2*y1*y3*z3 - x1^2*y2^2*z3 + x1^2*y2*y3*z2 + x1^2*y2*y3*z3 - x1^2*y3^2*z2 - x1^2*z1*z2^2 + 2*x1^2*z1*z2*z3 - x1^2*z1*z3^2 - x1*x2^3*z1 + x1*x2^3*z3 + x1*x2^2*x3*z1 - 2*x1*x2^2*x3*z2 + x1*x2^2*x3*z3 + x1*x2*x3^2*z1 + x1*x2*x3^2*z2 - 2*x1*x2*x3^2*z3 - x1*x2*y1^2*z2 + x1*x2*y1^2*z3 + 2*x1*x2*y1*y2*z1 + 2*x1*x2*y1*y2*z2 - 2*x1*x2*y1*y2*z3 - 2*x1*x2*y1*y3*z1 - x1*x2*y2^2*z1 + x1*x2*y2^2*z3 - 2*x1*x2*y2*y3*z2 + x1*x2*y3^2*z1 + x1*x2*y3^2*z2 + x1*x2*z1^2*z2 - x1*x2*z1^2*z3 + x1*x2*z1*z2^2 - 2*x1*x2*z1*z2*z3 + x1*x2*z1*z3^2 - x1*x2*z2^2*z3 + x1*x2*z2*z3^2 - x1*x3^3*z1 + x1*x3^3*z2 + x1*x3*y1^2*z2 - x1*x3*y1^2*z3 - 2*x1*x3*y1*y2*z1 + 2*x1*x3*y1*y3*z1 - 2*x1*x3*y1*y3*z2 + 2*x1*x3*y1*y3*z3 + x1*x3*y2^2*z1 + x1*x3*y2^2*z3 - 2*x1*x3*y2*y3*z3 - x1*x3*y3^2*z1 + x1*x3*y3^2*z2 - x1*x3*z1^2*z2 + x1*x3*z1^2*z3 + x1*x3*z1*z2^2 - 2*x1*x3*z1*z2*z3 + x1*x3*z1*z3^2 + x1*x3*z2^2*z3 - x1*x3*z2*z3^2 + x2^3*x3*z1 - x2^3*x3*z3 - 2*x2^2*x3^2*z1 + x2^2*x3^2*z2 + x2^2*x3^2*z3 - x2^2*y1^2*z3 - x2^2*y1*y2*z1 + x2^2*y1*y2*z3 + x2^2*y1*y3*z1 + x2^2*y1*y3*z3 + x2^2*y2*y3*z1 - x2^2*y2*y3*z3 - x2^2*y3^2*z1 - x2^2*z1^2*z2 + 2*x2^2*z1*z2*z3 - x2^2*z2*z3^2 + x2*x3^3*z1 - x2*x3^3*z2 + x2*x3*y1^2*z2 + x2*x3*y1^2*z3 - 2*x2*x3*y1*y2*z2 - 2*x2*x3*y1*y3*z3 + x2*x3*y2^2*z1 - x2*x3*y2^2*z3 - 2*x2*x3*y2*y3*z1 + 2*x2*x3*y2*y3*z2 + 2*x2*x3*y2*y3*z3 + x2*x3*y3^2*z1 - x2*x3*y3^2*z2 + x2*x3*z1^2*z2 + x2*x3*z1^2*z3 - x2*x3*z1*z2^2 - 2*x2*x3*z1*z2*z3 - x2*x3*z1*z3^2 + x2*x3*z2^2*z3 + x2*x3*z2*z3^2 - x3^2*y1^2*z2 + x3^2*y1*y2*z1 + x3^2*y1*y2*z2 - x3^2*y1*y3*z1 + x3^2*y1*y3*z2 - x3^2*y2^2*z1 + x3^2*y2*y3*z1 - x3^2*y2*y3*z2 - x3^2*z1^2*z3 + 2*x3^2*z1*z2*z3 - x3^2*z2^2*z3 - y1^3*y2*z2 + y1^3*y2*z3 + y1^3*y3*z2 - y1^3*y3*z3 + y1^2*y2^2*z1 + y1^2*y2^2*z2 - 2*y1^2*y2^2*z3 - 2*y1^2*y2*y3*z1 + y1^2*y2*y3*z2 + y1^2*y2*y3*z3 + y1^2*y3^2*z1 - 2*y1^2*y3^2*z2 + y1^2*y3^2*z3 - y1^2*z1*z2^2 + 2*y1^2*z1*z2*z3 - y1^2*z1*z3^2 - y1*y2^3*z1 + y1*y2^3*z3 + y1*y2^2*y3*z1 - 2*y1*y2^2*y3*z2 + y1*y2^2*y3*z3 + y1*y2*y3^2*z1 + y1*y2*y3^2*z2 - 2*y1*y2*y3^2*z3 + y1*y2*z1^2*z2 - y1*y2*z1^2*z3 + y1*y2*z1*z2^2 - 2*y1*y2*z1*z2*z3 + y1*y2*z1*z3^2 - y1*y2*z2^2*z3 + y1*y2*z2*z3^2 - y1*y3^3*z1 + y1*y3^3*z2 - y1*y3*z1^2*z2 + y1*y3*z1^2*z3 + y1*y3*z1*z2^2 - 2*y1*y3*z1*z2*z3 + y1*y3*z1*z3^2 + y1*y3*z2^2*z3 - y1*y3*z2*z3^2 + y2^3*y3*z1 - y2^3*y3*z3 - 2*y2^2*y3^2*z1 + y2^2*y3^2*z2 + y2^2*y3^2*z3 - y2^2*z1^2*z2 + 2*y2^2*z1*z2*z3 - y2^2*z2*z3^2 + y2*y3^3*z1 - y2*y3^3*z2 + y2*y3*z1^2*z2 + y2*y3*z1^2*z3 - y2*y3*z1*z2^2 - 2*y2*y3*z1*z2*z3 - y2*y3*z1*z3^2 + y2*y3*z2^2*z3 + y2*y3*z2*z3^2 - y3^2*z1^2*z3 + 2*y3^2*z1*z2*z3 - y3^2*z2^2*z3)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 + x1^2 + y1^2 + z1^2))*((y1 - y2)*(z1 - z3) - (y1 - y3)*(z1 - z2)))/sqrt(abs(((x1 - x2)*(y1 - y3) - (x1 - x3)*(y1 - y2)))^2 + abs(((x1 - x2)*(z1 - z3) - (x1 - x3)*(z1 - z2)))^2 + abs(((y1 - y2)*(z1 - z3) - (y1 - y3)*(z1 - z2)))^2) - (x1^2*x2*y1*y2 - x1^2*x2*y1*y3 - x1^2*x2*y2^2 + x1^2*x2*y2*y3 + x1^2*x2*z1*z2 - x1^2*x2*z1*z3 - x1^2*x2*z2^2 + x1^2*x2*z2*z3 - x1^2*x3*y1*y2 + x1^2*x3*y1*y3 + x1^2*x3*y2*y3 - x1^2*x3*y3^2 - x1^2*x3*z1*z2 + x1^2*x3*z1*z3 + x1^2*x3*z2*z3 - x1^2*x3*z3^2 - x1*x2^2*y1^2 + x1*x2^2*y1*y2 + x1*x2^2*y1*y3 - x1*x2^2*y2*y3 - x1*x2^2*z1^2 + x1*x2^2*z1*z2 + x1*x2^2*z1*z3 - x1*x2^2*z2*z3 + 2*x1*x2*x3*y1^2 - 2*x1*x2*x3*y1*y2 - 2*x1*x2*x3*y1*y3 + 2*x1*x2*x3*y2^2 - 2*x1*x2*x3*y2*y3 + 2*x1*x2*x3*y3^2 + 2*x1*x2*x3*z1^2 - 2*x1*x2*x3*z1*z2 - 2*x1*x2*x3*z1*z3 + 2*x1*x2*x3*z2^2 - 2*x1*x2*x3*z2*z3 + 2*x1*x2*x3*z3^2 - x1*x3^2*y1^2 + x1*x3^2*y1*y2 + x1*x3^2*y1*y3 - x1*x3^2*y2*y3 - x1*x3^2*z1^2 + x1*x3^2*z1*z2 + x1*x3^2*z1*z3 - x1*x3^2*z2*z3 + x1*y1^2*y2^2 - 2*x1*y1^2*y2*y3 + x1*y1^2*y3^2 - x1*y1*y2^3 + x1*y1*y2^2*y3 + x1*y1*y2*y3^2 + 2*x1*y1*y2*z1*z2 - 2*x1*y1*y2*z1*z3 - x1*y1*y2*z2^2 + x1*y1*y2*z3^2 - x1*y1*y3^3 - 2*x1*y1*y3*z1*z2 + 2*x1*y1*y3*z1*z3 + x1*y1*y3*z2^2 - x1*y1*y3*z3^2 + x1*y2^3*y3 - 2*x1*y2^2*y3^2 - x1*y2^2*z1*z2 + x1*y2^2*z1*z3 + x1*y2^2*z2*z3 - x1*y2^2*z3^2 + x1*y2*y3^3 + x1*y2*y3*z2^2 - 2*x1*y2*y3*z2*z3 + x1*y2*y3*z3^2 + x1*y3^2*z1*z2 - x1*y3^2*z1*z3 - x1*y3^2*z2^2 + x1*y3^2*z2*z3 + x1*z1^2*z2^2 - 2*x1*z1^2*z2*z3 + x1*z1^2*z3^2 - x1*z1*z2^3 + x1*z1*z2^2*z3 + x1*z1*z2*z3^2 - x1*z1*z3^3 + x1*z2^3*z3 - 2*x1*z2^2*z3^2 + x1*z2*z3^3 - x2^2*x3*y1*y2 + x2^2*x3*y1*y3 + x2^2*x3*y2*y3 - x2^2*x3*y3^2 - x2^2*x3*z1*z2 + x2^2*x3*z1*z3 + x2^2*x3*z2*z3 - x2^2*x3*z3^2 + x2*x3^2*y1*y2 - x2*x3^2*y1*y3 - x2*x3^2*y2^2 + x2*x3^2*y2*y3 + x2*x3^2*z1*z2 - x2*x3^2*z1*z3 - x2*x3^2*z2^2 + x2*x3^2*z2*z3 - x2*y1^3*y2 + x2*y1^3*y3 + x2*y1^2*y2^2 + x2*y1^2*y2*y3 - 2*x2*y1^2*y3^2 - x2*y1^2*z1*z2 + x2*y1^2*z1*z3 + x2*y1^2*z2*z3 - x2*y1^2*z3^2 - 2*x2*y1*y2^2*y3 + x2*y1*y2*y3^2 - x2*y1*y2*z1^2 + 2*x2*y1*y2*z1*z2 - 2*x2*y1*y2*z2*z3 + x2*y1*y2*z3^2 + x2*y1*y3^3 + x2*y1*y3*z1^2 - 2*x2*y1*y3*z1*z3 + x2*y1*y3*z3^2 + x2*y2^2*y3^2 - x2*y2*y3^3 + x2*y2*y3*z1^2 - 2*x2*y2*y3*z1*z2 + 2*x2*y2*y3*z2*z3 - x2*y2*y3*z3^2 - x2*y3^2*z1^2 + x2*y3^2*z1*z2 + x2*y3^2*z1*z3 - x2*y3^2*z2*z3 - x2*z1^3*z2 + x2*z1^3*z3 + x2*z1^2*z2^2 + x2*z1^2*z2*z3 - 2*x2*z1^2*z3^2 - 2*x2*z1*z2^2*z3 + x2*z1*z2*z3^2 + x2*z1*z3^3 + x2*z2^2*z3^2 - x2*z2*z3^3 + x3*y1^3*y2 - x3*y1^3*y3 - 2*x3*y1^2*y2^2 + x3*y1^2*y2*y3 + x3*y1^2*y3^2 + x3*y1^2*z1*z2 - x3*y1^2*z1*z3 - x3*y1^2*z2^2 + x3*y1^2*z2*z3 + x3*y1*y2^3 + x3*y1*y2^2*y3 - 2*x3*y1*y2*y3^2 + x3*y1*y2*z1^2 - 2*x3*y1*y2*z1*z2 + x3*y1*y2*z2^2 - x3*y1*y3*z1^2 + 2*x3*y1*y3*z1*z3 + x3*y1*y3*z2^2 - 2*x3*y1*y3*z2*z3 - x3*y2^3*y3 + x3*y2^2*y3^2 - x3*y2^2*z1^2 + x3*y2^2*z1*z2 + x3*y2^2*z1*z3 - x3*y2^2*z2*z3 + x3*y2*y3*z1^2 - 2*x3*y2*y3*z1*z3 - x3*y2*y3*z2^2 + 2*x3*y2*y3*z2*z3 + x3*z1^3*z2 - x3*z1^3*z3 - 2*x3*z1^2*z2^2 + x3*z1^2*z2*z3 + x3*z1^2*z3^2 + x3*z1*z2^3 + x3*z1*z2^2*z3 - 2*x3*z1*z2*z3^2 - x3*z2^3*z3 + x3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2), - (- x1^3*x2*y2 + x1^3*x2*y3 + x1^3*x3*y2 - x1^3*x3*y3 + x1^2*x2^2*y1 + x1^2*x2^2*y2 - 2*x1^2*x2^2*y3 - 2*x1^2*x2*x3*y1 + x1^2*x2*x3*y2 + x1^2*x2*x3*y3 + x1^2*x3^2*y1 - 2*x1^2*x3^2*y2 + x1^2*x3^2*y3 - x1^2*y1*y2^2 + 2*x1^2*y1*y2*y3 - x1^2*y1*y3^2 - x1^2*y2*z1*z2 + x1^2*y2*z1*z3 + x1^2*y2*z2*z3 - x1^2*y2*z3^2 + x1^2*y3*z1*z2 - x1^2*y3*z1*z3 - x1^2*y3*z2^2 + x1^2*y3*z2*z3 - x1*x2^3*y1 + x1*x2^3*y3 + x1*x2^2*x3*y1 - 2*x1*x2^2*x3*y2 + x1*x2^2*x3*y3 + x1*x2*x3^2*y1 + x1*x2*x3^2*y2 - 2*x1*x2*x3^2*y3 + x1*x2*y1^2*y2 - x1*x2*y1^2*y3 + x1*x2*y1*y2^2 - 2*x1*x2*y1*y2*y3 + x1*x2*y1*y3^2 + 2*x1*x2*y1*z1*z2 - 2*x1*x2*y1*z1*z3 - x1*x2*y1*z2^2 + x1*x2*y1*z3^2 - x1*x2*y2^2*y3 + x1*x2*y2*y3^2 - x1*x2*y2*z1^2 + 2*x1*x2*y2*z1*z2 - 2*x1*x2*y2*z2*z3 + x1*x2*y2*z3^2 + x1*x2*y3*z1^2 - 2*x1*x2*y3*z1*z2 + x1*x2*y3*z2^2 - x1*x3^3*y1 + x1*x3^3*y2 - x1*x3*y1^2*y2 + x1*x3*y1^2*y3 + x1*x3*y1*y2^2 - 2*x1*x3*y1*y2*y3 + x1*x3*y1*y3^2 - 2*x1*x3*y1*z1*z2 + 2*x1*x3*y1*z1*z3 + x1*x3*y1*z2^2 - x1*x3*y1*z3^2 + x1*x3*y2^2*y3 - x1*x3*y2*y3^2 + x1*x3*y2*z1^2 - 2*x1*x3*y2*z1*z3 + x1*x3*y2*z3^2 - x1*x3*y3*z1^2 + 2*x1*x3*y3*z1*z3 + x1*x3*y3*z2^2 - 2*x1*x3*y3*z2*z3 + x2^3*x3*y1 - x2^3*x3*y3 - 2*x2^2*x3^2*y1 + x2^2*x3^2*y2 + x2^2*x3^2*y3 - x2^2*y1^2*y2 + 2*x2^2*y1*y2*y3 - x2^2*y1*z1*z2 + x2^2*y1*z1*z3 + x2^2*y1*z2*z3 - x2^2*y1*z3^2 - x2^2*y2*y3^2 - x2^2*y3*z1^2 + x2^2*y3*z1*z2 + x2^2*y3*z1*z3 - x2^2*y3*z2*z3 + x2*x3^3*y1 - x2*x3^3*y2 + x2*x3*y1^2*y2 + x2*x3*y1^2*y3 - x2*x3*y1*y2^2 - 2*x2*x3*y1*y2*y3 - x2*x3*y1*y3^2 + x2*x3*y1*z2^2 - 2*x2*x3*y1*z2*z3 + x2*x3*y1*z3^2 + x2*x3*y2^2*y3 + x2*x3*y2*y3^2 + x2*x3*y2*z1^2 - 2*x2*x3*y2*z1*z2 + 2*x2*x3*y2*z2*z3 - x2*x3*y2*z3^2 + x2*x3*y3*z1^2 - 2*x2*x3*y3*z1*z3 - x2*x3*y3*z2^2 + 2*x2*x3*y3*z2*z3 - x3^2*y1^2*y3 + 2*x3^2*y1*y2*y3 + x3^2*y1*z1*z2 - x3^2*y1*z1*z3 - x3^2*y1*z2^2 + x3^2*y1*z2*z3 - x3^2*y2^2*y3 - x3^2*y2*z1^2 + x3^2*y2*z1*z2 + x3^2*y2*z1*z3 - x3^2*y2*z2*z3 + y1^2*y2*z1*z2 - y1^2*y2*z1*z3 - y1^2*y2*z2^2 + y1^2*y2*z2*z3 - y1^2*y3*z1*z2 + y1^2*y3*z1*z3 + y1^2*y3*z2*z3 - y1^2*y3*z3^2 - y1*y2^2*z1^2 + y1*y2^2*z1*z2 + y1*y2^2*z1*z3 - y1*y2^2*z2*z3 + 2*y1*y2*y3*z1^2 - 2*y1*y2*y3*z1*z2 - 2*y1*y2*y3*z1*z3 + 2*y1*y2*y3*z2^2 - 2*y1*y2*y3*z2*z3 + 2*y1*y2*y3*z3^2 - y1*y3^2*z1^2 + y1*y3^2*z1*z2 + y1*y3^2*z1*z3 - y1*y3^2*z2*z3 + y1*z1^2*z2^2 - 2*y1*z1^2*z2*z3 + y1*z1^2*z3^2 - y1*z1*z2^3 + y1*z1*z2^2*z3 + y1*z1*z2*z3^2 - y1*z1*z3^3 + y1*z2^3*z3 - 2*y1*z2^2*z3^2 + y1*z2*z3^3 - y2^2*y3*z1*z2 + y2^2*y3*z1*z3 + y2^2*y3*z2*z3 - y2^2*y3*z3^2 + y2*y3^2*z1*z2 - y2*y3^2*z1*z3 - y2*y3^2*z2^2 + y2*y3^2*z2*z3 - y2*z1^3*z2 + y2*z1^3*z3 + y2*z1^2*z2^2 + y2*z1^2*z2*z3 - 2*y2*z1^2*z3^2 - 2*y2*z1*z2^2*z3 + y2*z1*z2*z3^2 + y2*z1*z3^3 + y2*z2^2*z3^2 - y2*z2*z3^3 + y3*z1^3*z2 - y3*z1^3*z3 - 2*y3*z1^2*z2^2 + y3*z1^2*z2*z3 + y3*z1^2*z3^2 + y3*z1*z2^3 + y3*z1*z2^2*z3 - 2*y3*z1*z2*z3^2 - y3*z2^3*z3 + y3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2) - (conj(sqrt(x2*x3 - x1*x3 - x1*x2 - y1*y2 - y1*y3 + y2*y3 - z1*z2 - z1*z3 + z2*z3 - (x1 + (x1^2*x2*y1*y2 - x1^2*x2*y1*y3 - x1^2*x2*y2^2 + x1^2*x2*y2*y3 + x1^2*x2*z1*z2 - x1^2*x2*z1*z3 - x1^2*x2*z2^2 + x1^2*x2*z2*z3 - x1^2*x3*y1*y2 + x1^2*x3*y1*y3 + x1^2*x3*y2*y3 - x1^2*x3*y3^2 - x1^2*x3*z1*z2 + x1^2*x3*z1*z3 + x1^2*x3*z2*z3 - x1^2*x3*z3^2 - x1*x2^2*y1^2 + x1*x2^2*y1*y2 + x1*x2^2*y1*y3 - x1*x2^2*y2*y3 - x1*x2^2*z1^2 + x1*x2^2*z1*z2 + x1*x2^2*z1*z3 - x1*x2^2*z2*z3 + 2*x1*x2*x3*y1^2 - 2*x1*x2*x3*y1*y2 - 2*x1*x2*x3*y1*y3 + 2*x1*x2*x3*y2^2 - 2*x1*x2*x3*y2*y3 + 2*x1*x2*x3*y3^2 + 2*x1*x2*x3*z1^2 - 2*x1*x2*x3*z1*z2 - 2*x1*x2*x3*z1*z3 + 2*x1*x2*x3*z2^2 - 2*x1*x2*x3*z2*z3 + 2*x1*x2*x3*z3^2 - x1*x3^2*y1^2 + x1*x3^2*y1*y2 + x1*x3^2*y1*y3 - x1*x3^2*y2*y3 - x1*x3^2*z1^2 + x1*x3^2*z1*z2 + x1*x3^2*z1*z3 - x1*x3^2*z2*z3 + x1*y1^2*y2^2 - 2*x1*y1^2*y2*y3 + x1*y1^2*y3^2 - x1*y1*y2^3 + x1*y1*y2^2*y3 + x1*y1*y2*y3^2 + 2*x1*y1*y2*z1*z2 - 2*x1*y1*y2*z1*z3 - x1*y1*y2*z2^2 + x1*y1*y2*z3^2 - x1*y1*y3^3 - 2*x1*y1*y3*z1*z2 + 2*x1*y1*y3*z1*z3 + x1*y1*y3*z2^2 - x1*y1*y3*z3^2 + x1*y2^3*y3 - 2*x1*y2^2*y3^2 - x1*y2^2*z1*z2 + x1*y2^2*z1*z3 + x1*y2^2*z2*z3 - x1*y2^2*z3^2 + x1*y2*y3^3 + x1*y2*y3*z2^2 - 2*x1*y2*y3*z2*z3 + x1*y2*y3*z3^2 + x1*y3^2*z1*z2 - x1*y3^2*z1*z3 - x1*y3^2*z2^2 + x1*y3^2*z2*z3 + x1*z1^2*z2^2 - 2*x1*z1^2*z2*z3 + x1*z1^2*z3^2 - x1*z1*z2^3 + x1*z1*z2^2*z3 + x1*z1*z2*z3^2 - x1*z1*z3^3 + x1*z2^3*z3 - 2*x1*z2^2*z3^2 + x1*z2*z3^3 - x2^2*x3*y1*y2 + x2^2*x3*y1*y3 + x2^2*x3*y2*y3 - x2^2*x3*y3^2 - x2^2*x3*z1*z2 + x2^2*x3*z1*z3 + x2^2*x3*z2*z3 - x2^2*x3*z3^2 + x2*x3^2*y1*y2 - x2*x3^2*y1*y3 - x2*x3^2*y2^2 + x2*x3^2*y2*y3 + x2*x3^2*z1*z2 - x2*x3^2*z1*z3 - x2*x3^2*z2^2 + x2*x3^2*z2*z3 - x2*y1^3*y2 + x2*y1^3*y3 + x2*y1^2*y2^2 + x2*y1^2*y2*y3 - 2*x2*y1^2*y3^2 - x2*y1^2*z1*z2 + x2*y1^2*z1*z3 + x2*y1^2*z2*z3 - x2*y1^2*z3^2 - 2*x2*y1*y2^2*y3 + x2*y1*y2*y3^2 - x2*y1*y2*z1^2 + 2*x2*y1*y2*z1*z2 - 2*x2*y1*y2*z2*z3 + x2*y1*y2*z3^2 + x2*y1*y3^3 + x2*y1*y3*z1^2 - 2*x2*y1*y3*z1*z3 + x2*y1*y3*z3^2 + x2*y2^2*y3^2 - x2*y2*y3^3 + x2*y2*y3*z1^2 - 2*x2*y2*y3*z1*z2 + 2*x2*y2*y3*z2*z3 - x2*y2*y3*z3^2 - x2*y3^2*z1^2 + x2*y3^2*z1*z2 + x2*y3^2*z1*z3 - x2*y3^2*z2*z3 - x2*z1^3*z2 + x2*z1^3*z3 + x2*z1^2*z2^2 + x2*z1^2*z2*z3 - 2*x2*z1^2*z3^2 - 2*x2*z1*z2^2*z3 + x2*z1*z2*z3^2 + x2*z1*z3^3 + x2*z2^2*z3^2 - x2*z2*z3^3 + x3*y1^3*y2 - x3*y1^3*y3 - 2*x3*y1^2*y2^2 + x3*y1^2*y2*y3 + x3*y1^2*y3^2 + x3*y1^2*z1*z2 - x3*y1^2*z1*z3 - x3*y1^2*z2^2 + x3*y1^2*z2*z3 + x3*y1*y2^3 + x3*y1*y2^2*y3 - 2*x3*y1*y2*y3^2 + x3*y1*y2*z1^2 - 2*x3*y1*y2*z1*z2 + x3*y1*y2*z2^2 - x3*y1*y3*z1^2 + 2*x3*y1*y3*z1*z3 + x3*y1*y3*z2^2 - 2*x3*y1*y3*z2*z3 - x3*y2^3*y3 + x3*y2^2*y3^2 - x3*y2^2*z1^2 + x3*y2^2*z1*z2 + x3*y2^2*z1*z3 - x3*y2^2*z2*z3 + x3*y2*y3*z1^2 - 2*x3*y2*y3*z1*z3 - x3*y2*y3*z2^2 + 2*x3*y2*y3*z2*z3 + x3*z1^3*z2 - x3*z1^3*z3 - 2*x3*z1^2*z2^2 + x3*z1^2*z2*z3 + x3*z1^2*z3^2 + x3*z1*z2^3 + x3*z1*z2^2*z3 - 2*x3*z1*z2*z3^2 - x3*z2^3*z3 + x3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 - (y1 + (- x1^3*x2*y2 + x1^3*x2*y3 + x1^3*x3*y2 - x1^3*x3*y3 + x1^2*x2^2*y1 + x1^2*x2^2*y2 - 2*x1^2*x2^2*y3 - 2*x1^2*x2*x3*y1 + x1^2*x2*x3*y2 + x1^2*x2*x3*y3 + x1^2*x3^2*y1 - 2*x1^2*x3^2*y2 + x1^2*x3^2*y3 - x1^2*y1*y2^2 + 2*x1^2*y1*y2*y3 - x1^2*y1*y3^2 - x1^2*y2*z1*z2 + x1^2*y2*z1*z3 + x1^2*y2*z2*z3 - x1^2*y2*z3^2 + x1^2*y3*z1*z2 - x1^2*y3*z1*z3 - x1^2*y3*z2^2 + x1^2*y3*z2*z3 - x1*x2^3*y1 + x1*x2^3*y3 + x1*x2^2*x3*y1 - 2*x1*x2^2*x3*y2 + x1*x2^2*x3*y3 + x1*x2*x3^2*y1 + x1*x2*x3^2*y2 - 2*x1*x2*x3^2*y3 + x1*x2*y1^2*y2 - x1*x2*y1^2*y3 + x1*x2*y1*y2^2 - 2*x1*x2*y1*y2*y3 + x1*x2*y1*y3^2 + 2*x1*x2*y1*z1*z2 - 2*x1*x2*y1*z1*z3 - x1*x2*y1*z2^2 + x1*x2*y1*z3^2 - x1*x2*y2^2*y3 + x1*x2*y2*y3^2 - x1*x2*y2*z1^2 + 2*x1*x2*y2*z1*z2 - 2*x1*x2*y2*z2*z3 + x1*x2*y2*z3^2 + x1*x2*y3*z1^2 - 2*x1*x2*y3*z1*z2 + x1*x2*y3*z2^2 - x1*x3^3*y1 + x1*x3^3*y2 - x1*x3*y1^2*y2 + x1*x3*y1^2*y3 + x1*x3*y1*y2^2 - 2*x1*x3*y1*y2*y3 + x1*x3*y1*y3^2 - 2*x1*x3*y1*z1*z2 + 2*x1*x3*y1*z1*z3 + x1*x3*y1*z2^2 - x1*x3*y1*z3^2 + x1*x3*y2^2*y3 - x1*x3*y2*y3^2 + x1*x3*y2*z1^2 - 2*x1*x3*y2*z1*z3 + x1*x3*y2*z3^2 - x1*x3*y3*z1^2 + 2*x1*x3*y3*z1*z3 + x1*x3*y3*z2^2 - 2*x1*x3*y3*z2*z3 + x2^3*x3*y1 - x2^3*x3*y3 - 2*x2^2*x3^2*y1 + x2^2*x3^2*y2 + x2^2*x3^2*y3 - x2^2*y1^2*y2 + 2*x2^2*y1*y2*y3 - x2^2*y1*z1*z2 + x2^2*y1*z1*z3 + x2^2*y1*z2*z3 - x2^2*y1*z3^2 - x2^2*y2*y3^2 - x2^2*y3*z1^2 + x2^2*y3*z1*z2 + x2^2*y3*z1*z3 - x2^2*y3*z2*z3 + x2*x3^3*y1 - x2*x3^3*y2 + x2*x3*y1^2*y2 + x2*x3*y1^2*y3 - x2*x3*y1*y2^2 - 2*x2*x3*y1*y2*y3 - x2*x3*y1*y3^2 + x2*x3*y1*z2^2 - 2*x2*x3*y1*z2*z3 + x2*x3*y1*z3^2 + x2*x3*y2^2*y3 + x2*x3*y2*y3^2 + x2*x3*y2*z1^2 - 2*x2*x3*y2*z1*z2 + 2*x2*x3*y2*z2*z3 - x2*x3*y2*z3^2 + x2*x3*y3*z1^2 - 2*x2*x3*y3*z1*z3 - x2*x3*y3*z2^2 + 2*x2*x3*y3*z2*z3 - x3^2*y1^2*y3 + 2*x3^2*y1*y2*y3 + x3^2*y1*z1*z2 - x3^2*y1*z1*z3 - x3^2*y1*z2^2 + x3^2*y1*z2*z3 - x3^2*y2^2*y3 - x3^2*y2*z1^2 + x3^2*y2*z1*z2 + x3^2*y2*z1*z3 - x3^2*y2*z2*z3 + y1^2*y2*z1*z2 - y1^2*y2*z1*z3 - y1^2*y2*z2^2 + y1^2*y2*z2*z3 - y1^2*y3*z1*z2 + y1^2*y3*z1*z3 + y1^2*y3*z2*z3 - y1^2*y3*z3^2 - y1*y2^2*z1^2 + y1*y2^2*z1*z2 + y1*y2^2*z1*z3 - y1*y2^2*z2*z3 + 2*y1*y2*y3*z1^2 - 2*y1*y2*y3*z1*z2 - 2*y1*y2*y3*z1*z3 + 2*y1*y2*y3*z2^2 - 2*y1*y2*y3*z2*z3 + 2*y1*y2*y3*z3^2 - y1*y3^2*z1^2 + y1*y3^2*z1*z2 + y1*y3^2*z1*z3 - y1*y3^2*z2*z3 + y1*z1^2*z2^2 - 2*y1*z1^2*z2*z3 + y1*z1^2*z3^2 - y1*z1*z2^3 + y1*z1*z2^2*z3 + y1*z1*z2*z3^2 - y1*z1*z3^3 + y1*z2^3*z3 - 2*y1*z2^2*z3^2 + y1*z2*z3^3 - y2^2*y3*z1*z2 + y2^2*y3*z1*z3 + y2^2*y3*z2*z3 - y2^2*y3*z3^2 + y2*y3^2*z1*z2 - y2*y3^2*z1*z3 - y2*y3^2*z2^2 + y2*y3^2*z2*z3 - y2*z1^3*z2 + y2*z1^3*z3 + y2*z1^2*z2^2 + y2*z1^2*z2*z3 - 2*y2*z1^2*z3^2 - 2*y2*z1*z2^2*z3 + y2*z1*z2*z3^2 + y2*z1*z3^3 + y2*z2^2*z3^2 - y2*z2*z3^3 + y3*z1^3*z2 - y3*z1^3*z3 - 2*y3*z1^2*z2^2 + y3*z1^2*z2*z3 + y3*z1^2*z3^2 + y3*z1*z2^3 + y3*z1*z2^2*z3 - 2*y3*z1*z2*z3^2 - y3*z2^3*z3 + y3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 - (z1 + (- x1^3*x2*z2 + x1^3*x2*z3 + x1^3*x3*z2 - x1^3*x3*z3 + x1^2*x2^2*z1 + x1^2*x2^2*z2 - 2*x1^2*x2^2*z3 - 2*x1^2*x2*x3*z1 + x1^2*x2*x3*z2 + x1^2*x2*x3*z3 + x1^2*x3^2*z1 - 2*x1^2*x3^2*z2 + x1^2*x3^2*z3 - x1^2*y1*y2*z2 + x1^2*y1*y2*z3 + x1^2*y1*y3*z2 - x1^2*y1*y3*z3 - x1^2*y2^2*z3 + x1^2*y2*y3*z2 + x1^2*y2*y3*z3 - x1^2*y3^2*z2 - x1^2*z1*z2^2 + 2*x1^2*z1*z2*z3 - x1^2*z1*z3^2 - x1*x2^3*z1 + x1*x2^3*z3 + x1*x2^2*x3*z1 - 2*x1*x2^2*x3*z2 + x1*x2^2*x3*z3 + x1*x2*x3^2*z1 + x1*x2*x3^2*z2 - 2*x1*x2*x3^2*z3 - x1*x2*y1^2*z2 + x1*x2*y1^2*z3 + 2*x1*x2*y1*y2*z1 + 2*x1*x2*y1*y2*z2 - 2*x1*x2*y1*y2*z3 - 2*x1*x2*y1*y3*z1 - x1*x2*y2^2*z1 + x1*x2*y2^2*z3 - 2*x1*x2*y2*y3*z2 + x1*x2*y3^2*z1 + x1*x2*y3^2*z2 + x1*x2*z1^2*z2 - x1*x2*z1^2*z3 + x1*x2*z1*z2^2 - 2*x1*x2*z1*z2*z3 + x1*x2*z1*z3^2 - x1*x2*z2^2*z3 + x1*x2*z2*z3^2 - x1*x3^3*z1 + x1*x3^3*z2 + x1*x3*y1^2*z2 - x1*x3*y1^2*z3 - 2*x1*x3*y1*y2*z1 + 2*x1*x3*y1*y3*z1 - 2*x1*x3*y1*y3*z2 + 2*x1*x3*y1*y3*z3 + x1*x3*y2^2*z1 + x1*x3*y2^2*z3 - 2*x1*x3*y2*y3*z3 - x1*x3*y3^2*z1 + x1*x3*y3^2*z2 - x1*x3*z1^2*z2 + x1*x3*z1^2*z3 + x1*x3*z1*z2^2 - 2*x1*x3*z1*z2*z3 + x1*x3*z1*z3^2 + x1*x3*z2^2*z3 - x1*x3*z2*z3^2 + x2^3*x3*z1 - x2^3*x3*z3 - 2*x2^2*x3^2*z1 + x2^2*x3^2*z2 + x2^2*x3^2*z3 - x2^2*y1^2*z3 - x2^2*y1*y2*z1 + x2^2*y1*y2*z3 + x2^2*y1*y3*z1 + x2^2*y1*y3*z3 + x2^2*y2*y3*z1 - x2^2*y2*y3*z3 - x2^2*y3^2*z1 - x2^2*z1^2*z2 + 2*x2^2*z1*z2*z3 - x2^2*z2*z3^2 + x2*x3^3*z1 - x2*x3^3*z2 + x2*x3*y1^2*z2 + x2*x3*y1^2*z3 - 2*x2*x3*y1*y2*z2 - 2*x2*x3*y1*y3*z3 + x2*x3*y2^2*z1 - x2*x3*y2^2*z3 - 2*x2*x3*y2*y3*z1 + 2*x2*x3*y2*y3*z2 + 2*x2*x3*y2*y3*z3 + x2*x3*y3^2*z1 - x2*x3*y3^2*z2 + x2*x3*z1^2*z2 + x2*x3*z1^2*z3 - x2*x3*z1*z2^2 - 2*x2*x3*z1*z2*z3 - x2*x3*z1*z3^2 + x2*x3*z2^2*z3 + x2*x3*z2*z3^2 - x3^2*y1^2*z2 + x3^2*y1*y2*z1 + x3^2*y1*y2*z2 - x3^2*y1*y3*z1 + x3^2*y1*y3*z2 - x3^2*y2^2*z1 + x3^2*y2*y3*z1 - x3^2*y2*y3*z2 - x3^2*z1^2*z3 + 2*x3^2*z1*z2*z3 - x3^2*z2^2*z3 - y1^3*y2*z2 + y1^3*y2*z3 + y1^3*y3*z2 - y1^3*y3*z3 + y1^2*y2^2*z1 + y1^2*y2^2*z2 - 2*y1^2*y2^2*z3 - 2*y1^2*y2*y3*z1 + y1^2*y2*y3*z2 + y1^2*y2*y3*z3 + y1^2*y3^2*z1 - 2*y1^2*y3^2*z2 + y1^2*y3^2*z3 - y1^2*z1*z2^2 + 2*y1^2*z1*z2*z3 - y1^2*z1*z3^2 - y1*y2^3*z1 + y1*y2^3*z3 + y1*y2^2*y3*z1 - 2*y1*y2^2*y3*z2 + y1*y2^2*y3*z3 + y1*y2*y3^2*z1 + y1*y2*y3^2*z2 - 2*y1*y2*y3^2*z3 + y1*y2*z1^2*z2 - y1*y2*z1^2*z3 + y1*y2*z1*z2^2 - 2*y1*y2*z1*z2*z3 + y1*y2*z1*z3^2 - y1*y2*z2^2*z3 + y1*y2*z2*z3^2 - y1*y3^3*z1 + y1*y3^3*z2 - y1*y3*z1^2*z2 + y1*y3*z1^2*z3 + y1*y3*z1*z2^2 - 2*y1*y3*z1*z2*z3 + y1*y3*z1*z3^2 + y1*y3*z2^2*z3 - y1*y3*z2*z3^2 + y2^3*y3*z1 - y2^3*y3*z3 - 2*y2^2*y3^2*z1 + y2^2*y3^2*z2 + y2^2*y3^2*z3 - y2^2*z1^2*z2 + 2*y2^2*z1*z2*z3 - y2^2*z2*z3^2 + y2*y3^3*z1 - y2*y3^3*z2 + y2*y3*z1^2*z2 + y2*y3*z1^2*z3 - y2*y3*z1*z2^2 - 2*y2*y3*z1*z2*z3 - y2*y3*z1*z3^2 + y2*y3*z2^2*z3 + y2*y3*z2*z3^2 - y3^2*z1^2*z3 + 2*y3^2*z1*z2*z3 - y3^2*z2^2*z3)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 + x1^2 + y1^2 + z1^2))*((x1 - x2)*(z1 - z3) - (x1 - x3)*(z1 - z2)))/sqrt(abs(((x1 - x2)*(y1 - y3) - (x1 - x3)*(y1 - y2)))^2 + abs(((x1 - x2)*(z1 - z3) - (x1 - x3)*(z1 - z2)))^2 + abs(((y1 - y2)*(z1 - z3) - (y1 - y3)*(z1 - z2)))^2), (conj(sqrt(x2*x3 - x1*x3 - x1*x2 - y1*y2 - y1*y3 + y2*y3 - z1*z2 - z1*z3 + z2*z3 - (x1 + (x1^2*x2*y1*y2 - x1^2*x2*y1*y3 - x1^2*x2*y2^2 + x1^2*x2*y2*y3 + x1^2*x2*z1*z2 - x1^2*x2*z1*z3 - x1^2*x2*z2^2 + x1^2*x2*z2*z3 - x1^2*x3*y1*y2 + x1^2*x3*y1*y3 + x1^2*x3*y2*y3 - x1^2*x3*y3^2 - x1^2*x3*z1*z2 + x1^2*x3*z1*z3 + x1^2*x3*z2*z3 - x1^2*x3*z3^2 - x1*x2^2*y1^2 + x1*x2^2*y1*y2 + x1*x2^2*y1*y3 - x1*x2^2*y2*y3 - x1*x2^2*z1^2 + x1*x2^2*z1*z2 + x1*x2^2*z1*z3 - x1*x2^2*z2*z3 + 2*x1*x2*x3*y1^2 - 2*x1*x2*x3*y1*y2 - 2*x1*x2*x3*y1*y3 + 2*x1*x2*x3*y2^2 - 2*x1*x2*x3*y2*y3 + 2*x1*x2*x3*y3^2 + 2*x1*x2*x3*z1^2 - 2*x1*x2*x3*z1*z2 - 2*x1*x2*x3*z1*z3 + 2*x1*x2*x3*z2^2 - 2*x1*x2*x3*z2*z3 + 2*x1*x2*x3*z3^2 - x1*x3^2*y1^2 + x1*x3^2*y1*y2 + x1*x3^2*y1*y3 - x1*x3^2*y2*y3 - x1*x3^2*z1^2 + x1*x3^2*z1*z2 + x1*x3^2*z1*z3 - x1*x3^2*z2*z3 + x1*y1^2*y2^2 - 2*x1*y1^2*y2*y3 + x1*y1^2*y3^2 - x1*y1*y2^3 + x1*y1*y2^2*y3 + x1*y1*y2*y3^2 + 2*x1*y1*y2*z1*z2 - 2*x1*y1*y2*z1*z3 - x1*y1*y2*z2^2 + x1*y1*y2*z3^2 - x1*y1*y3^3 - 2*x1*y1*y3*z1*z2 + 2*x1*y1*y3*z1*z3 + x1*y1*y3*z2^2 - x1*y1*y3*z3^2 + x1*y2^3*y3 - 2*x1*y2^2*y3^2 - x1*y2^2*z1*z2 + x1*y2^2*z1*z3 + x1*y2^2*z2*z3 - x1*y2^2*z3^2 + x1*y2*y3^3 + x1*y2*y3*z2^2 - 2*x1*y2*y3*z2*z3 + x1*y2*y3*z3^2 + x1*y3^2*z1*z2 - x1*y3^2*z1*z3 - x1*y3^2*z2^2 + x1*y3^2*z2*z3 + x1*z1^2*z2^2 - 2*x1*z1^2*z2*z3 + x1*z1^2*z3^2 - x1*z1*z2^3 + x1*z1*z2^2*z3 + x1*z1*z2*z3^2 - x1*z1*z3^3 + x1*z2^3*z3 - 2*x1*z2^2*z3^2 + x1*z2*z3^3 - x2^2*x3*y1*y2 + x2^2*x3*y1*y3 + x2^2*x3*y2*y3 - x2^2*x3*y3^2 - x2^2*x3*z1*z2 + x2^2*x3*z1*z3 + x2^2*x3*z2*z3 - x2^2*x3*z3^2 + x2*x3^2*y1*y2 - x2*x3^2*y1*y3 - x2*x3^2*y2^2 + x2*x3^2*y2*y3 + x2*x3^2*z1*z2 - x2*x3^2*z1*z3 - x2*x3^2*z2^2 + x2*x3^2*z2*z3 - x2*y1^3*y2 + x2*y1^3*y3 + x2*y1^2*y2^2 + x2*y1^2*y2*y3 - 2*x2*y1^2*y3^2 - x2*y1^2*z1*z2 + x2*y1^2*z1*z3 + x2*y1^2*z2*z3 - x2*y1^2*z3^2 - 2*x2*y1*y2^2*y3 + x2*y1*y2*y3^2 - x2*y1*y2*z1^2 + 2*x2*y1*y2*z1*z2 - 2*x2*y1*y2*z2*z3 + x2*y1*y2*z3^2 + x2*y1*y3^3 + x2*y1*y3*z1^2 - 2*x2*y1*y3*z1*z3 + x2*y1*y3*z3^2 + x2*y2^2*y3^2 - x2*y2*y3^3 + x2*y2*y3*z1^2 - 2*x2*y2*y3*z1*z2 + 2*x2*y2*y3*z2*z3 - x2*y2*y3*z3^2 - x2*y3^2*z1^2 + x2*y3^2*z1*z2 + x2*y3^2*z1*z3 - x2*y3^2*z2*z3 - x2*z1^3*z2 + x2*z1^3*z3 + x2*z1^2*z2^2 + x2*z1^2*z2*z3 - 2*x2*z1^2*z3^2 - 2*x2*z1*z2^2*z3 + x2*z1*z2*z3^2 + x2*z1*z3^3 + x2*z2^2*z3^2 - x2*z2*z3^3 + x3*y1^3*y2 - x3*y1^3*y3 - 2*x3*y1^2*y2^2 + x3*y1^2*y2*y3 + x3*y1^2*y3^2 + x3*y1^2*z1*z2 - x3*y1^2*z1*z3 - x3*y1^2*z2^2 + x3*y1^2*z2*z3 + x3*y1*y2^3 + x3*y1*y2^2*y3 - 2*x3*y1*y2*y3^2 + x3*y1*y2*z1^2 - 2*x3*y1*y2*z1*z2 + x3*y1*y2*z2^2 - x3*y1*y3*z1^2 + 2*x3*y1*y3*z1*z3 + x3*y1*y3*z2^2 - 2*x3*y1*y3*z2*z3 - x3*y2^3*y3 + x3*y2^2*y3^2 - x3*y2^2*z1^2 + x3*y2^2*z1*z2 + x3*y2^2*z1*z3 - x3*y2^2*z2*z3 + x3*y2*y3*z1^2 - 2*x3*y2*y3*z1*z3 - x3*y2*y3*z2^2 + 2*x3*y2*y3*z2*z3 + x3*z1^3*z2 - x3*z1^3*z3 - 2*x3*z1^2*z2^2 + x3*z1^2*z2*z3 + x3*z1^2*z3^2 + x3*z1*z2^3 + x3*z1*z2^2*z3 - 2*x3*z1*z2*z3^2 - x3*z2^3*z3 + x3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 - (y1 + (- x1^3*x2*y2 + x1^3*x2*y3 + x1^3*x3*y2 - x1^3*x3*y3 + x1^2*x2^2*y1 + x1^2*x2^2*y2 - 2*x1^2*x2^2*y3 - 2*x1^2*x2*x3*y1 + x1^2*x2*x3*y2 + x1^2*x2*x3*y3 + x1^2*x3^2*y1 - 2*x1^2*x3^2*y2 + x1^2*x3^2*y3 - x1^2*y1*y2^2 + 2*x1^2*y1*y2*y3 - x1^2*y1*y3^2 - x1^2*y2*z1*z2 + x1^2*y2*z1*z3 + x1^2*y2*z2*z3 - x1^2*y2*z3^2 + x1^2*y3*z1*z2 - x1^2*y3*z1*z3 - x1^2*y3*z2^2 + x1^2*y3*z2*z3 - x1*x2^3*y1 + x1*x2^3*y3 + x1*x2^2*x3*y1 - 2*x1*x2^2*x3*y2 + x1*x2^2*x3*y3 + x1*x2*x3^2*y1 + x1*x2*x3^2*y2 - 2*x1*x2*x3^2*y3 + x1*x2*y1^2*y2 - x1*x2*y1^2*y3 + x1*x2*y1*y2^2 - 2*x1*x2*y1*y2*y3 + x1*x2*y1*y3^2 + 2*x1*x2*y1*z1*z2 - 2*x1*x2*y1*z1*z3 - x1*x2*y1*z2^2 + x1*x2*y1*z3^2 - x1*x2*y2^2*y3 + x1*x2*y2*y3^2 - x1*x2*y2*z1^2 + 2*x1*x2*y2*z1*z2 - 2*x1*x2*y2*z2*z3 + x1*x2*y2*z3^2 + x1*x2*y3*z1^2 - 2*x1*x2*y3*z1*z2 + x1*x2*y3*z2^2 - x1*x3^3*y1 + x1*x3^3*y2 - x1*x3*y1^2*y2 + x1*x3*y1^2*y3 + x1*x3*y1*y2^2 - 2*x1*x3*y1*y2*y3 + x1*x3*y1*y3^2 - 2*x1*x3*y1*z1*z2 + 2*x1*x3*y1*z1*z3 + x1*x3*y1*z2^2 - x1*x3*y1*z3^2 + x1*x3*y2^2*y3 - x1*x3*y2*y3^2 + x1*x3*y2*z1^2 - 2*x1*x3*y2*z1*z3 + x1*x3*y2*z3^2 - x1*x3*y3*z1^2 + 2*x1*x3*y3*z1*z3 + x1*x3*y3*z2^2 - 2*x1*x3*y3*z2*z3 + x2^3*x3*y1 - x2^3*x3*y3 - 2*x2^2*x3^2*y1 + x2^2*x3^2*y2 + x2^2*x3^2*y3 - x2^2*y1^2*y2 + 2*x2^2*y1*y2*y3 - x2^2*y1*z1*z2 + x2^2*y1*z1*z3 + x2^2*y1*z2*z3 - x2^2*y1*z3^2 - x2^2*y2*y3^2 - x2^2*y3*z1^2 + x2^2*y3*z1*z2 + x2^2*y3*z1*z3 - x2^2*y3*z2*z3 + x2*x3^3*y1 - x2*x3^3*y2 + x2*x3*y1^2*y2 + x2*x3*y1^2*y3 - x2*x3*y1*y2^2 - 2*x2*x3*y1*y2*y3 - x2*x3*y1*y3^2 + x2*x3*y1*z2^2 - 2*x2*x3*y1*z2*z3 + x2*x3*y1*z3^2 + x2*x3*y2^2*y3 + x2*x3*y2*y3^2 + x2*x3*y2*z1^2 - 2*x2*x3*y2*z1*z2 + 2*x2*x3*y2*z2*z3 - x2*x3*y2*z3^2 + x2*x3*y3*z1^2 - 2*x2*x3*y3*z1*z3 - x2*x3*y3*z2^2 + 2*x2*x3*y3*z2*z3 - x3^2*y1^2*y3 + 2*x3^2*y1*y2*y3 + x3^2*y1*z1*z2 - x3^2*y1*z1*z3 - x3^2*y1*z2^2 + x3^2*y1*z2*z3 - x3^2*y2^2*y3 - x3^2*y2*z1^2 + x3^2*y2*z1*z2 + x3^2*y2*z1*z3 - x3^2*y2*z2*z3 + y1^2*y2*z1*z2 - y1^2*y2*z1*z3 - y1^2*y2*z2^2 + y1^2*y2*z2*z3 - y1^2*y3*z1*z2 + y1^2*y3*z1*z3 + y1^2*y3*z2*z3 - y1^2*y3*z3^2 - y1*y2^2*z1^2 + y1*y2^2*z1*z2 + y1*y2^2*z1*z3 - y1*y2^2*z2*z3 + 2*y1*y2*y3*z1^2 - 2*y1*y2*y3*z1*z2 - 2*y1*y2*y3*z1*z3 + 2*y1*y2*y3*z2^2 - 2*y1*y2*y3*z2*z3 + 2*y1*y2*y3*z3^2 - y1*y3^2*z1^2 + y1*y3^2*z1*z2 + y1*y3^2*z1*z3 - y1*y3^2*z2*z3 + y1*z1^2*z2^2 - 2*y1*z1^2*z2*z3 + y1*z1^2*z3^2 - y1*z1*z2^3 + y1*z1*z2^2*z3 + y1*z1*z2*z3^2 - y1*z1*z3^3 + y1*z2^3*z3 - 2*y1*z2^2*z3^2 + y1*z2*z3^3 - y2^2*y3*z1*z2 + y2^2*y3*z1*z3 + y2^2*y3*z2*z3 - y2^2*y3*z3^2 + y2*y3^2*z1*z2 - y2*y3^2*z1*z3 - y2*y3^2*z2^2 + y2*y3^2*z2*z3 - y2*z1^3*z2 + y2*z1^3*z3 + y2*z1^2*z2^2 + y2*z1^2*z2*z3 - 2*y2*z1^2*z3^2 - 2*y2*z1*z2^2*z3 + y2*z1*z2*z3^2 + y2*z1*z3^3 + y2*z2^2*z3^2 - y2*z2*z3^3 + y3*z1^3*z2 - y3*z1^3*z3 - 2*y3*z1^2*z2^2 + y3*z1^2*z2*z3 + y3*z1^2*z3^2 + y3*z1*z2^3 + y3*z1*z2^2*z3 - 2*y3*z1*z2*z3^2 - y3*z2^3*z3 + y3*z2^2*z3^2)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 - (z1 + (- x1^3*x2*z2 + x1^3*x2*z3 + x1^3*x3*z2 - x1^3*x3*z3 + x1^2*x2^2*z1 + x1^2*x2^2*z2 - 2*x1^2*x2^2*z3 - 2*x1^2*x2*x3*z1 + x1^2*x2*x3*z2 + x1^2*x2*x3*z3 + x1^2*x3^2*z1 - 2*x1^2*x3^2*z2 + x1^2*x3^2*z3 - x1^2*y1*y2*z2 + x1^2*y1*y2*z3 + x1^2*y1*y3*z2 - x1^2*y1*y3*z3 - x1^2*y2^2*z3 + x1^2*y2*y3*z2 + x1^2*y2*y3*z3 - x1^2*y3^2*z2 - x1^2*z1*z2^2 + 2*x1^2*z1*z2*z3 - x1^2*z1*z3^2 - x1*x2^3*z1 + x1*x2^3*z3 + x1*x2^2*x3*z1 - 2*x1*x2^2*x3*z2 + x1*x2^2*x3*z3 + x1*x2*x3^2*z1 + x1*x2*x3^2*z2 - 2*x1*x2*x3^2*z3 - x1*x2*y1^2*z2 + x1*x2*y1^2*z3 + 2*x1*x2*y1*y2*z1 + 2*x1*x2*y1*y2*z2 - 2*x1*x2*y1*y2*z3 - 2*x1*x2*y1*y3*z1 - x1*x2*y2^2*z1 + x1*x2*y2^2*z3 - 2*x1*x2*y2*y3*z2 + x1*x2*y3^2*z1 + x1*x2*y3^2*z2 + x1*x2*z1^2*z2 - x1*x2*z1^2*z3 + x1*x2*z1*z2^2 - 2*x1*x2*z1*z2*z3 + x1*x2*z1*z3^2 - x1*x2*z2^2*z3 + x1*x2*z2*z3^2 - x1*x3^3*z1 + x1*x3^3*z2 + x1*x3*y1^2*z2 - x1*x3*y1^2*z3 - 2*x1*x3*y1*y2*z1 + 2*x1*x3*y1*y3*z1 - 2*x1*x3*y1*y3*z2 + 2*x1*x3*y1*y3*z3 + x1*x3*y2^2*z1 + x1*x3*y2^2*z3 - 2*x1*x3*y2*y3*z3 - x1*x3*y3^2*z1 + x1*x3*y3^2*z2 - x1*x3*z1^2*z2 + x1*x3*z1^2*z3 + x1*x3*z1*z2^2 - 2*x1*x3*z1*z2*z3 + x1*x3*z1*z3^2 + x1*x3*z2^2*z3 - x1*x3*z2*z3^2 + x2^3*x3*z1 - x2^3*x3*z3 - 2*x2^2*x3^2*z1 + x2^2*x3^2*z2 + x2^2*x3^2*z3 - x2^2*y1^2*z3 - x2^2*y1*y2*z1 + x2^2*y1*y2*z3 + x2^2*y1*y3*z1 + x2^2*y1*y3*z3 + x2^2*y2*y3*z1 - x2^2*y2*y3*z3 - x2^2*y3^2*z1 - x2^2*z1^2*z2 + 2*x2^2*z1*z2*z3 - x2^2*z2*z3^2 + x2*x3^3*z1 - x2*x3^3*z2 + x2*x3*y1^2*z2 + x2*x3*y1^2*z3 - 2*x2*x3*y1*y2*z2 - 2*x2*x3*y1*y3*z3 + x2*x3*y2^2*z1 - x2*x3*y2^2*z3 - 2*x2*x3*y2*y3*z1 + 2*x2*x3*y2*y3*z2 + 2*x2*x3*y2*y3*z3 + x2*x3*y3^2*z1 - x2*x3*y3^2*z2 + x2*x3*z1^2*z2 + x2*x3*z1^2*z3 - x2*x3*z1*z2^2 - 2*x2*x3*z1*z2*z3 - x2*x3*z1*z3^2 + x2*x3*z2^2*z3 + x2*x3*z2*z3^2 - x3^2*y1^2*z2 + x3^2*y1*y2*z1 + x3^2*y1*y2*z2 - x3^2*y1*y3*z1 + x3^2*y1*y3*z2 - x3^2*y2^2*z1 + x3^2*y2*y3*z1 - x3^2*y2*y3*z2 - x3^2*z1^2*z3 + 2*x3^2*z1*z2*z3 - x3^2*z2^2*z3 - y1^3*y2*z2 + y1^3*y2*z3 + y1^3*y3*z2 - y1^3*y3*z3 + y1^2*y2^2*z1 + y1^2*y2^2*z2 - 2*y1^2*y2^2*z3 - 2*y1^2*y2*y3*z1 + y1^2*y2*y3*z2 + y1^2*y2*y3*z3 + y1^2*y3^2*z1 - 2*y1^2*y3^2*z2 + y1^2*y3^2*z3 - y1^2*z1*z2^2 + 2*y1^2*z1*z2*z3 - y1^2*z1*z3^2 - y1*y2^3*z1 + y1*y2^3*z3 + y1*y2^2*y3*z1 - 2*y1*y2^2*y3*z2 + y1*y2^2*y3*z3 + y1*y2*y3^2*z1 + y1*y2*y3^2*z2 - 2*y1*y2*y3^2*z3 + y1*y2*z1^2*z2 - y1*y2*z1^2*z3 + y1*y2*z1*z2^2 - 2*y1*y2*z1*z2*z3 + y1*y2*z1*z3^2 - y1*y2*z2^2*z3 + y1*y2*z2*z3^2 - y1*y3^3*z1 + y1*y3^3*z2 - y1*y3*z1^2*z2 + y1*y3*z1^2*z3 + y1*y3*z1*z2^2 - 2*y1*y3*z1*z2*z3 + y1*y3*z1*z3^2 + y1*y3*z2^2*z3 - y1*y3*z2*z3^2 + y2^3*y3*z1 - y2^3*y3*z3 - 2*y2^2*y3^2*z1 + y2^2*y3^2*z2 + y2^2*y3^2*z3 - y2^2*z1^2*z2 + 2*y2^2*z1*z2*z3 - y2^2*z2*z3^2 + y2*y3^3*z1 - y2*y3^3*z2 + y2*y3*z1^2*z2 + y2*y3*z1^2*z3 - y2*y3*z1*z2^2 - 2*y2*y3*z1*z2*z3 - y2*y3*z1*z3^2 + y2*y3*z2^2*z3 + y2*y3*z2*z3^2 - y3^2*z1^2*z3 + 2*y3^2*z1*z2*z3 - y3^2*z2^2*z3)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2))^2 + x1^2 + y1^2 + z1^2))*((x1 - x2)*(y1 - y3) - (x1 - x3)*(y1 - y2)))/sqrt(abs(((x1 - x2)*(y1 - y3) - (x1 - x3)*(y1 - y2)))^2 + abs(((x1 - x2)*(z1 - z3) - (x1 - x3)*(z1 - z2)))^2 + abs(((y1 - y2)*(z1 - z3) - (y1 - y3)*(z1 - z2)))^2) - (- x1^3*x2*z2 + x1^3*x2*z3 + x1^3*x3*z2 - x1^3*x3*z3 + x1^2*x2^2*z1 + x1^2*x2^2*z2 - 2*x1^2*x2^2*z3 - 2*x1^2*x2*x3*z1 + x1^2*x2*x3*z2 + x1^2*x2*x3*z3 + x1^2*x3^2*z1 - 2*x1^2*x3^2*z2 + x1^2*x3^2*z3 - x1^2*y1*y2*z2 + x1^2*y1*y2*z3 + x1^2*y1*y3*z2 - x1^2*y1*y3*z3 - x1^2*y2^2*z3 + x1^2*y2*y3*z2 + x1^2*y2*y3*z3 - x1^2*y3^2*z2 - x1^2*z1*z2^2 + 2*x1^2*z1*z2*z3 - x1^2*z1*z3^2 - x1*x2^3*z1 + x1*x2^3*z3 + x1*x2^2*x3*z1 - 2*x1*x2^2*x3*z2 + x1*x2^2*x3*z3 + x1*x2*x3^2*z1 + x1*x2*x3^2*z2 - 2*x1*x2*x3^2*z3 - x1*x2*y1^2*z2 + x1*x2*y1^2*z3 + 2*x1*x2*y1*y2*z1 + 2*x1*x2*y1*y2*z2 - 2*x1*x2*y1*y2*z3 - 2*x1*x2*y1*y3*z1 - x1*x2*y2^2*z1 + x1*x2*y2^2*z3 - 2*x1*x2*y2*y3*z2 + x1*x2*y3^2*z1 + x1*x2*y3^2*z2 + x1*x2*z1^2*z2 - x1*x2*z1^2*z3 + x1*x2*z1*z2^2 - 2*x1*x2*z1*z2*z3 + x1*x2*z1*z3^2 - x1*x2*z2^2*z3 + x1*x2*z2*z3^2 - x1*x3^3*z1 + x1*x3^3*z2 + x1*x3*y1^2*z2 - x1*x3*y1^2*z3 - 2*x1*x3*y1*y2*z1 + 2*x1*x3*y1*y3*z1 - 2*x1*x3*y1*y3*z2 + 2*x1*x3*y1*y3*z3 + x1*x3*y2^2*z1 + x1*x3*y2^2*z3 - 2*x1*x3*y2*y3*z3 - x1*x3*y3^2*z1 + x1*x3*y3^2*z2 - x1*x3*z1^2*z2 + x1*x3*z1^2*z3 + x1*x3*z1*z2^2 - 2*x1*x3*z1*z2*z3 + x1*x3*z1*z3^2 + x1*x3*z2^2*z3 - x1*x3*z2*z3^2 + x2^3*x3*z1 - x2^3*x3*z3 - 2*x2^2*x3^2*z1 + x2^2*x3^2*z2 + x2^2*x3^2*z3 - x2^2*y1^2*z3 - x2^2*y1*y2*z1 + x2^2*y1*y2*z3 + x2^2*y1*y3*z1 + x2^2*y1*y3*z3 + x2^2*y2*y3*z1 - x2^2*y2*y3*z3 - x2^2*y3^2*z1 - x2^2*z1^2*z2 + 2*x2^2*z1*z2*z3 - x2^2*z2*z3^2 + x2*x3^3*z1 - x2*x3^3*z2 + x2*x3*y1^2*z2 + x2*x3*y1^2*z3 - 2*x2*x3*y1*y2*z2 - 2*x2*x3*y1*y3*z3 + x2*x3*y2^2*z1 - x2*x3*y2^2*z3 - 2*x2*x3*y2*y3*z1 + 2*x2*x3*y2*y3*z2 + 2*x2*x3*y2*y3*z3 + x2*x3*y3^2*z1 - x2*x3*y3^2*z2 + x2*x3*z1^2*z2 + x2*x3*z1^2*z3 - x2*x3*z1*z2^2 - 2*x2*x3*z1*z2*z3 - x2*x3*z1*z3^2 + x2*x3*z2^2*z3 + x2*x3*z2*z3^2 - x3^2*y1^2*z2 + x3^2*y1*y2*z1 + x3^2*y1*y2*z2 - x3^2*y1*y3*z1 + x3^2*y1*y3*z2 - x3^2*y2^2*z1 + x3^2*y2*y3*z1 - x3^2*y2*y3*z2 - x3^2*z1^2*z3 + 2*x3^2*z1*z2*z3 - x3^2*z2^2*z3 - y1^3*y2*z2 + y1^3*y2*z3 + y1^3*y3*z2 - y1^3*y3*z3 + y1^2*y2^2*z1 + y1^2*y2^2*z2 - 2*y1^2*y2^2*z3 - 2*y1^2*y2*y3*z1 + y1^2*y2*y3*z2 + y1^2*y2*y3*z3 + y1^2*y3^2*z1 - 2*y1^2*y3^2*z2 + y1^2*y3^2*z3 - y1^2*z1*z2^2 + 2*y1^2*z1*z2*z3 - y1^2*z1*z3^2 - y1*y2^3*z1 + y1*y2^3*z3 + y1*y2^2*y3*z1 - 2*y1*y2^2*y3*z2 + y1*y2^2*y3*z3 + y1*y2*y3^2*z1 + y1*y2*y3^2*z2 - 2*y1*y2*y3^2*z3 + y1*y2*z1^2*z2 - y1*y2*z1^2*z3 + y1*y2*z1*z2^2 - 2*y1*y2*z1*z2*z3 + y1*y2*z1*z3^2 - y1*y2*z2^2*z3 + y1*y2*z2*z3^2 - y1*y3^3*z1 + y1*y3^3*z2 - y1*y3*z1^2*z2 + y1*y3*z1^2*z3 + y1*y3*z1*z2^2 - 2*y1*y3*z1*z2*z3 + y1*y3*z1*z3^2 + y1*y3*z2^2*z3 - y1*y3*z2*z3^2 + y2^3*y3*z1 - y2^3*y3*z3 - 2*y2^2*y3^2*z1 + y2^2*y3^2*z2 + y2^2*y3^2*z3 - y2^2*z1^2*z2 + 2*y2^2*z1*z2*z3 - y2^2*z2*z3^2 + y2*y3^3*z1 - y2*y3^3*z2 + y2*y3*z1^2*z2 + y2*y3*z1^2*z3 - y2*y3*z1*z2^2 - 2*y2*y3*z1*z2*z3 - y2*y3*z1*z3^2 + y2*y3*z2^2*z3 + y2*y3*z2*z3^2 - y3^2*z1^2*z3 + 2*y3^2*z1*z2*z3 - y3^2*z2^2*z3)/(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 + x1^2*z2^2 - 2*x1^2*z2*z3 + x1^2*z3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 - 2*x1*x2*z1*z2 + 2*x1*x2*z1*z3 + 2*x1*x2*z2*z3 - 2*x1*x2*z3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + 2*x1*x3*z1*z2 - 2*x1*x3*z1*z3 - 2*x1*x3*z2^2 + 2*x1*x3*z2*z3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 + x2^2*z1^2 - 2*x2^2*z1*z3 + x2^2*z3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 - 2*x2*x3*z1^2 + 2*x2*x3*z1*z2 + 2*x2*x3*z1*z3 - 2*x2*x3*z2*z3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2 + x3^2*z1^2 - 2*x3^2*z1*z2 + x3^2*z2^2 + y1^2*z2^2 - 2*y1^2*z2*z3 + y1^2*z3^2 - 2*y1*y2*z1*z2 + 2*y1*y2*z1*z3 + 2*y1*y2*z2*z3 - 2*y1*y2*z3^2 + 2*y1*y3*z1*z2 - 2*y1*y3*z1*z3 - 2*y1*y3*z2^2 + 2*y1*y3*z2*z3 + y2^2*z1^2 - 2*y2^2*z1*z3 + y2^2*z3^2 - 2*y2*y3*z1^2 + 2*y2*y3*z1*z2 + 2*y2*y3*z1*z3 - 2*y2*y3*z2*z3 + y3^2*z1^2 - 2*y3^2*z1*z2 + y3^2*z2^2)];

end